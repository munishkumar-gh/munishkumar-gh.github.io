<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Sales Goal' datatype='integer' name='[Sales Parameter]' param-domain-type='range' role='measure' type='quantitative' value='260000'>
        <calculation class='tableau' formula='260000' />
        <range granularity='1000' max='300000' min='50000' />
      </column>
    </datasource>
    <datasource caption='Global_Superstore_2016' inline='true' name='federated.0ha1vfm0vdwomj11syb340d7q0v4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_superstore_2016' name='excel-direct.0ogc1i102e5x9u146l0lo0zc9fes'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/mkumar/Documents/GitHub/@Working/9_No_Code_Tableau/00_Data/global_superstore_2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ogc1i102e5x9u146l0lo0zc9fes' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X2147483647:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='integer' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0ogc1i102e5x9u146l0lo0zc9fes' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X2147483647:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='integer' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ogc1i102e5x9u146l0lo0zc9fes' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ogc1i102e5x9u146l0lo0zc9fes' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region (Returns)]' value='[Returns].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_6B5190CFE4A943FB9474EE776D2F76D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_4162F5F0BE26496294CE9F963A22B299]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_4162F5F0BE26496294CE9F963A22B299]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_AEB02E7C3BEE44D5B3D26F0F7A591BFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_AEB02E7C3BEE44D5B3D26F0F7A591BFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_AEB02E7C3BEE44D5B3D26F0F7A591BFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales Results' datatype='string' name='[Calculation_653866385695174656]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Sales])&lt;= [Parameters].[Sales Parameter] &#13;&#10;THEN &quot;Goal Not Met&quot;&#13;&#10;ELSE &quot;Goal Met&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column aggregation='None' caption='Profit (bin)' datatype='integer' name='[Profit (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Profit]' peg='0' size='1000' />
      </column>
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='C18441%' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_6B5190CFE4A943FB9474EE776D2F76D2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_4162F5F0BE26496294CE9F963A22B299]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_AEB02E7C3BEE44D5B3D26F0F7A591BFE]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Order Priority:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Critical&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;High&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sales Goal' datatype='integer' name='[Sales Parameter]' param-domain-type='range' role='measure' type='quantitative' value='260000'>
          <calculation class='tableau' formula='260000' />
          <range granularity='1000' max='300000' min='50000' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_6B5190CFE4A943FB9474EE776D2F76D2'>
            <properties context=''>
              <relation connection='excel-direct.0ogc1i102e5x9u146l0lo0zc9fes' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X2147483647:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='integer' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_4162F5F0BE26496294CE9F963A22B299'>
            <properties context=''>
              <relation connection='excel-direct.0ogc1i102e5x9u146l0lo0zc9fes' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_AEB02E7C3BEE44D5B3D26F0F7A591BFE'>
            <properties context=''>
              <relation connection='excel-direct.0ogc1i102e5x9u146l0lo0zc9fes' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_6B5190CFE4A943FB9474EE776D2F76D2' />
            <second-end-point object-id='People_4162F5F0BE26496294CE9F963A22B299' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Region (People)]' />
              <expression op='[Region (Returns)]' />
            </expression>
            <first-end-point object-id='People_4162F5F0BE26496294CE9F963A22B299' />
            <second-end-point object-id='Returns_AEB02E7C3BEE44D5B3D26F0F7A591BFE' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Ex_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ff0000' fontname='Arial Black' fontsize='12'>Load Global Superstore 2016 </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>1. Order Data, Use filter on country to retrieve only US data </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>2. Columns = Longitude </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>3. Rows = Latitude to be rows, </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>4. Details = country and state </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>5. Colour = sum(profit)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#5500ff' fontname='Arial Black' fontsize='12'>--&gt; Map is loaded from openstreet map and requires online connectivity.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Superstore_2016' name='federated.0ha1vfm0vdwomj11syb340d7q0v4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ha1vfm0vdwomj11syb340d7q0v4'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='12' />
            <format attr='width-header' value='60' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[sum:Profit:qk]' />
              <lod column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]' />
              <lod column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:State:nk]' />
              <geometry column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[Latitude (generated)]</rows>
        <cols>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{89D52B80-743C-486D-B307-93F6008842DD}' />
    </worksheet>
    <worksheet name='Ex_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ff0000' fontname='Arial Black' fontsize='20'>Scatterplot – </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='20'>1. Uncheck Aggregate measures (under &apos;Analysis&apos;) </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='20'>2. Column = &quot;Sales&quot;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='20'>3. Row = &quot;Profit&quot;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='20'>4. Colour = &quot;Segment&quot; </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='20'>5. Display the Filter = &quot;Category&quot;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Superstore_2016' name='federated.0ha1vfm0vdwomj11syb340d7q0v4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ha1vfm0vdwomj11syb340d7q0v4'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' default-format='C18441%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Category:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Segment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[sum:Profit:qk]</rows>
        <cols>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{4B13E731-B926-4B3D-8B4D-5DFCEC662DDF}' />
    </worksheet>
    <worksheet name='Ex_3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ff0000' fontname='Arial Black' fontsize='18'>Bubble Plot</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>1. Drop &quot;Customer Name&quot; into columns and &quot;AVG(Profit)&quot; into rows</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>--&gt; Filter &quot;State&quot; to Texas and also filter on &quot;City&quot; to Houston</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>2. Under &quot;Show Me&quot;, click Bubble Chart</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>3. Under Marks --&gt; &quot;Sub-Category&quot; to Color, &quot;AVG(Profit)&quot; to Size &amp; &quot;Customer Name&quot; to Label</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Superstore_2016' name='federated.0ha1vfm0vdwomj11syb340d7q0v4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ha1vfm0vdwomj11syb340d7q0v4'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:City:nk]'>
            <groupfilter function='member' level='[none:City:nk]' member='&quot;Houston&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:State:nk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:State:nk]</column>
            <column>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Sub-Category:nk]' />
              <size column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[avg:Profit:qk]' />
              <text column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Customer Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D4AD8D43-4A53-42E3-A85C-F1EEF58341A4}' />
    </worksheet>
    <worksheet name='Ex_4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ff0000' fontname='Arial Black' fontsize='18'>Histogram</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>1. Go Measures, Right Click on Profit --&gt; Create--&gt; Bins for Profit </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>2. Set the bin size to 1000. </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>3. Column = Profit (bin) for column </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='18'>4. Row= Count(profit)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Superstore_2016' name='federated.0ha1vfm0vdwomj11syb340d7q0v4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ha1vfm0vdwomj11syb340d7q0v4'>
            <column aggregation='None' caption='Profit (bin)' datatype='integer' name='[Profit (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Profit]' peg='0' size='1000' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Count' name='[cnt:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit (bin)]' derivation='None' name='[none:Profit (bin):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[cnt:Profit:qk]</rows>
        <cols>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Profit (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[Profit (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{DC8F2BFB-E6D9-4441-9E3B-C163F056ECD4}' />
    </worksheet>
    <worksheet name='Ex_5'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000' fontname='Arial Black' fontsize='16'>Boxplot</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='16'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='16'>1. Column = Region</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='16'>2. Row = sum(profit)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='16'>3. Select &quot;Box plot&quot; under &quot;Show Me&quot;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='16'>3. Detail = Year and Quarter of Order Date.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='16'>--&gt; Median (50th  percentile), 25th (Q1) and 75th (Q3) percentile?</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='16'>--&gt; Default boxplot has whiskers at 1.5x IQR i.e. upper = Q3 + (Q3-Q1)*1.5 and lower = Q1 - (Q3-Q1)*1.5</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='16'>--&gt; Double click on a box to change to min-max</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Superstore_2016' name='federated.0ha1vfm0vdwomj11syb340d7q0v4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ha1vfm0vdwomj11syb340d7q0v4'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Region:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[yr:Order Date:ok]' />
              <lod column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[qr:Order Date:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[sum:Profit:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[sum:Profit:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[sum:Profit:qk]</rows>
        <cols>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{576F3E6F-C3D6-4C5D-B339-08E760545367}' />
    </worksheet>
    <worksheet name='Ex_6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ff0000' fontname='Arial Black' fontsize='14' underline='true'>Dynamic Graphs: Setting a Sales Target</run>
            <run>Æ&#10;</run>
            <run fontcolor='#5500ff' fontname='Arial Black' fontsize='12'>Right click on &apos;Sales&apos; --&gt; Create --&gt; Parameter</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>This will create a pop up called &quot;Create Parameter&quot;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>1. Change name to &quot;Sales Goal&quot;, data type to Integer &amp; under Display format,  select currency (standard). </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>2. Current value = 100,000, min = 50,000, max = 300,000, step size = 1000 . Click &apos;OK&apos;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>3. Right click &apos;Sales&apos; --&gt; </run>
            <run bold='true' fontcolor='#000000' fontname='Arial Black' fontsize='12'>Create --&gt; Calculated Field</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'> &apos;Sales Results&apos; using &apos;Sales&apos;. </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>--&gt; </run>
            <run bold='true' fontcolor='#ff0000' fontname='Arial' fontsize='12'><![CDATA[IF SUM([Sales])<=[Sales Goal] THEN "Goal Not Met" ELSE "Goal Met" END]]></run>
            <run bold='true' fontcolor='#000000' fontname='Arial' fontsize='12'>Æ </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>4. Column = &quot;Sum(Sales)&quot;, Rows = &quot;Sub-category&quot;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>6. Colour = &quot;Sales Results&quot;, Detail = &quot;Sales Goal&quot;</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>8. &quot;Sales Goal&quot; slider : Right Click at &quot;Sales Goal&quot; under &quot;Markers&quot; and Select “Show Parameter&quot;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Superstore_2016' name='federated.0ha1vfm0vdwomj11syb340d7q0v4' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sales Goal' datatype='integer' name='[Sales Parameter]' param-domain-type='range' role='measure' type='quantitative' value='260000'>
              <calculation class='tableau' formula='260000' />
              <range granularity='1000' max='300000' min='50000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ha1vfm0vdwomj11syb340d7q0v4'>
            <column caption='Sales Results' datatype='string' name='[Calculation_653866385695174656]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Sales])&lt;= [Parameters].[Sales Parameter] &#13;&#10;THEN &quot;Goal Not Met&quot;&#13;&#10;ELSE &quot;Goal Met&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' default-format='C18441%' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_653866385695174656]' derivation='User' name='[usr:Calculation_653866385695174656:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[usr:Calculation_653866385695174656:nk]' />
              <lod column='[Parameters].[Sales Parameter]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Sub-Category:nk]</rows>
        <cols>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{0B799A09-8A2E-4B41-AC3B-6A9A2CD6E4AB}' />
    </worksheet>
    <worksheet name='Ex_7'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#ff0000' fontname='Arial Black' fontsize='12'>Forecast Sales for 13 Mths</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>1. Ensure sales is a continuous measure. </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>2. Column = Month(order date) </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>3. Rows = sum(sales)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>4. Right Click on last data point in graph and select  “Forecast Results”. Drag &quot;Sales&quot; into details, change to upper and lower prediction</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>--&gt; Tableau requires at least five data points in the time series (dates) to estimate a trend, and enough data points for at least two seasons or one season plus five periods to estimate seasonality. </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>--&gt; For example, at least nine data points are required to estimate a model with a four quarter seasonal cycle (4 + 5), and at least 24 to estimate a model with a twelve month seasonal cycle (2 * 12). </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Arial Black' fontsize='12'>--&gt; Technique is known as exponential smoothing; algos try to find a regular pattern in measures that can be continued into the future. </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global_Superstore_2016' name='federated.0ha1vfm0vdwomj11syb340d7q0v4' />
          </datasources>
          <datasource-dependencies datasource='federated.0ha1vfm0vdwomj11syb340d7q0v4'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='C18441%' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-prediction-interval-lower' name='[fPIL:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-prediction-interval-upper' name='[fPIU:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Forecast Indicator:nk]' />
              <lod column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fPIU:sum:Sales:qk]' />
              <lod column='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fPIL:sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fVal:sum:Sales:qk]</rows>
        <cols>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[tmn:Order Date:qk]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='219'>
            <formatted-text>
              <run fontcolor='#787878'>Forecast indicator: </run>
              <run bold='true'><![CDATA[<[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Forecast Indicator:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Month of Order Date: </run>
              <run bold='true'><![CDATA[<[federated.0ha1vfm0vdwomj11syb340d7q0v4].[tmn:Order Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Lower Prediction Interval for Sales: </run>
              <run bold='true'><![CDATA[<[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fPIL:sum:Sales:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Upper Prediction Interval for Sales: </run>
              <run bold='true'><![CDATA[<[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fPIU:sum:Sales:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fVal:sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[tmn:Order Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fVal:sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[tmn:Order Date:qk]</field>
                      <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fPIL:sum:Sales:qk]</field>
                      <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fPIU:sum:Sales:qk]</field>
                      <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[fVal:sum:Sales:qk]</field>
                      <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Forecast Indicator:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2016-06-01 00:00:00#</value>
                    <value>39509</value>
                    <value>75617</value>
                    <value>57563</value>
                    <value>&quot;Estimate&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='48' y='123' />
          </annotation>
        </annotations>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='90.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Month-Trunc' range-size='13' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{2233BCDE-E9ED-46A5-8BD0-32CBB96DDF6A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Ex_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{602F4694-7CD4-49DA-B17F-B142BF853EE4}' />
    </window>
    <window class='worksheet' name='Ex_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Category:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8DBE1E63-E208-45FC-AEF2-EFB3A62FB502}' />
    </window>
    <window class='worksheet' name='Ex_3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:City:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Customer Name:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Market:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Order Priority:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Person:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Postal Code:ok]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Product Name:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Region:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:State:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9512EBB3-23A2-45A3-9C93-A1913AC773AE}' />
    </window>
    <window class='worksheet' name='Ex_4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Profit (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C6CF92B-3C92-4719-89D8-25057645AF28}' />
    </window>
    <window class='worksheet' name='Ex_5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Region:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[qr:Order Date:ok]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00ECD679-6543-42EC-9F42-5B7890BEFE99}' />
    </window>
    <window class='worksheet' name='Ex_6'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[usr:Calculation_653866385695174656:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Sales Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Sub-Category:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[usr:Calculation_653866385695174656:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FB0BC16-E841-496C-9145-0A5C31AB5718}' />
    </window>
    <window class='worksheet' maximized='true' name='Ex_7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Country:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[none:Forecast Indicator:nk]</field>
            <field>[federated.0ha1vfm0vdwomj11syb340d7q0v4].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB49BF36-B495-4A81-BFB9-99B9CA308027}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Ex_1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO19WYwkyXneF3lV1l3d08dM99zH7szuzu6SXFKkSFGkeMkSBQKUbEiiTQEy
      ZFvwg+AT1qN8PBg2ZMA27Bcbtg5YsihSsiWa5IqkKFLkLu+9Zg/O1XP19F13ZVaefqj+s6Oy
      Mqsy6+qqnvqAma7KyoyIzPz/iP8OVqlUXFmWMUoYhoFGowHHcSKdzxgDAEiSBMdxkEwmYRgG
      GGOwLKvjPNd1vc+O48B13Z59+M/h2wo6zv/GH5MkCbZttx13HAeMsbbz/PcuCIL32bZt2LYN
      SZLaruOvj3s/QWCMQdd1qKracW2cvoaFoOfZDbquI5FIdL2m23NQVRWJRAKu68I0TWiaBkmW
      5Y4HMky4rgtBEGAYBgzDiHwN/eU/i6LovSz+AYR9Dmubf0j+axljHrEyxqCqKprNZihjOI4D
      RVG8e2OMecQdxKBBbQiCAF3XwU9ENJYoxEHt92ICujcaHz2LOH11azsKE/rHTddGgWmaSCaT
      gTQQ1HbQOxNFEaZpwjRNMMYgxRpxHyCCUFUVsixD1/WOmTwMjuMgkUiAMeatAkD4g+NfaNDL
      CHoo/nb43wVB8FYU/rifgWgF4I8rigLTNHveI99PWPvDAt0Hz5DDaD+RSEBVVWiaFnmS66dv
      Inr+fURpg87hJ2F6BiNnAKAlJqTTabiuC1VV0Wg0IjEAzfrJZBK2baPRaLT95p8J/IQTRxTy
      P1g61m2ppWts2w4VocLG4hePSGzqZxYNapsfT9g9DYu5aIWkiWAQdHtO/Lj9jOxvwz9h+Sc5
      T8weeMQRQQ9eURTve7PZ7PrQXNdFs9n0Vo9cLodKpdK2jBPhRB0DtevvJ4jwePk+7H74z3wb
      vfQd/0uRZTnwpfWSz7uJVkGTRK8xhbXZC3Fm/ihj4BFGvEFMEPYueVG6TYcbyqhjgJiAMQbT
      NAOVVv4GLctCtVrF3NwcZFn2ZECacQzDCCToXi+x24wNwGNU27a7PlBBEAJXD9d1uzJn0IsK
      ItYoRNlrFgwaV5y2JgWiKHYc67aCh53LXyOEnj1CMMYgSZInOxJDkL7AfwZayg/NMJLU4llR
      FNvkORKXCGEPIqp8TWJJtwdKDz1IT6B76vVSCJZltSnPwybEqOMIY6ZxgVfIiRZGOY5DYQCg
      NXNmMhlPNwgSKegzAFSrVTiOA1mWIQgCJElCMpn02kskEh5zRIF/JvQTXVRzKt8eT2Q8QUeB
      4zjQdd1raxiWmSBEWUnoPvhJYFxM0O2+yVzMjzVOu/4+gEMQgXgIguApub3MpLZto16ve7Zc
      fhUxDAOyLEPTtL7GESTDA+FyfNjD9zOQIAhtFiK/aMZ/TqfTHStaHAaKCr9IxX/vNtsOoh8M
      C0HPwz8e/3sUBKFDTOJxqAwAtAaYTCaRSCRQr9dhmmao4qnrOprNJmRZRjqdhqIoEEURiUTC
      m6nIuhQ2a/EPxC8b83I9wf/QwmYnxtr9B5ZleYptkAnV34YkSdB1HZZleStZkIIX1G8QelmU
      ghigF6K05z8/jhIeF/52eamB3oV/lfcz0aEzAGMt54QgCEin09A0rc3c6YfrujAMA5ZlIZFI
      IJFIQFEUT17knTzEFGEvO4gRullV4oKcLWFKtL/dbDaLcrkMSZKQyWTamKeXmZVvtxvoXP/q
      xo+nmxm1m8k16B6HCVpRaYLoZu3in3s3Zj90BiCQSJNOp8EYQ6PRaDMFAu0vybZtaJoGRVHg
      OA4sy8LOzg4Mw4AgiqhUqsHEDMCFCwZ2cAAAXLR/Bw7OCWrEdw0DgwsXcAFB6HTQxWGiYrGI
      RqPRZmFq6z7g5UZFtVpFNpsN/K0b0QzSb9h1cZ8LWfwoHCJKf63vAMCPofUdcCeHAYCD1SCd
      TrcptM1mE7quB5q8ms2mN+vv7u5ifn4eGxub+PwbFQiSgv7moABu4Fvq0Wiq8QA/8fRJHLxb
      hkqlgkqjiaXjy5FG0KxXIo41PvRKcWRt94LjOHi4dguXzp9tHYhC/277eYaG0FfjtekGnBNw
      zUQxAIFCJ0imbzabAILlWpKbU6kUzp8/j7W1NVy9+hS+deNrqEhZMFEZ+/hlp4h8Ptcx21lM
      Qi6f77vdSbbRR4Vt2yinUpib6/85DBOHZgbtBZLnSeENs/GT/d91Xdy6dQsQJHz+a9/B6WQT
      ixjtTBdKkCOi03Ha40eFSWPhiVwBeDDGkE6nkUwmoWkaNE2DZVlteoFpmhAEAXcfPETdliA4
      Bi6ePwdpu4qtkgPGxsvnobrDDJg0FpjYFYAHrQbXr99AsVj0rD+iKHpiEWMMF86dQS4BnFiY
      w5s37+KlN26OnfhbAx5d08NaBcbp3PL1fAh9hmPiVwCC67r47lv3MJ/P4UKjAXU/jCKXy3ne
      Yddx8OEPvB+yLOM//Y//jVMLGdyzdEAaTb5DXLv4MPsdpP2jIEoNC1PDAACwZ0h4WM/ijVd3
      cfGYhCurc9ja3oYiy8hms1hcXIQkSdA0DbZeRU23gPz8yBggDLwIdODaH+sQImNQZpp2TBUD
      pBQRBhPgpo7hRw0Xb12rwrUtuGYRx1I70G0Bx1Qb1a17eNtTl/G1b34b+UwFNcz11V83b2p3
      T2twGEHU5b+XF5faHEXAHPU/OvSO0h3nCjVVDLCQS6K0H+7DGANLpPd/yaMMADKwDsDOJKCZ
      Dk6efxx6rQy4DjAEXSDqy3EDGECWZVhm7ySgOP0MC0FxP1GYoJt3epCxRG3XH3DIe7nJOtjr
      PqZCCQZaN/f+Zy9BNcs9zxWUJF564xbysoOaNA8mdMaRR+kv6HuUuBYWEDqQSqWQUiRUytEc
      XKOchYcVmzOqMUZlKNdt5YRYlgXHcWAYBhzHgW3bXnRAL0wVA6yeWMYHL8/Dtbvn2jr3fwBN
      yqHpMFhM8R4I/3DICkImVT48mj7zyTB8eLQ/RicqIaysHMf2w3XYVu/UwXGsAN0C+6JcFzdk
      PC56zt770cQU4ChJkvddFMXABJqONoY12HGAMYbV5QXADA97tssPwVLzYMk8tGoJzfVrcJu1
      tlhyykQjgiemsG3b+40Yg47x1/Pj4T8ffA/XG+byWeh6+PjHLf4EIchE6vdq9wogDEWfi8aB
      MeGgASJ2SZIgy7JH8Dwj9MJUMQAALBw7BsUJJiDXtmCWNuAWTkFKH0O5YUKcPwUmShAEwQsu
      I9mQ/Av0j2YNPueYzucfaLdZnzHWVdd1HAe72zuDPYQxgV/xuqVR9suwxEhh0bKkD/CETOda
      luVNViQG0ThpAouyQk2VEgy0Ug2P5xTcCxDvHL0Cxzahrf0AiVQGKgwICRFCIt2RJBEEv5zf
      v4wb/tCPHTuGytrdwAJVwOHY6MNi+fm/o9ZJwtDNYSdJEkzT7IgapjaJGSi/OwhTtwIAwHuf
      PA3H6FwFxPQ8Eicuw67t4NnTeTTkObC507HbH1UCBwCoagKXLp7D9v17A68Efp3E/51XDvlz
      SLTjdZ/D8wz3Bz43gFZoWtlJFOI/h7YzjsEOG6dWV+E0ioEvTN+8AbVwHLt2GsLS42CCeAgv
      tseyK0m4cOEcLK2OSrm3VatrTwEmTP4zWUIsy/LEBmIM0m/434ZR2ycqBploSPanv7w+wB/r
      xQBTJwIBgKLIWGG7qNVM1NTjEOSDBInUqacBuNhgrTKDUYl/qMpnhHYYYzh1ahVvvnWjVRmj
      R5JHPyDrCB8vRX2TTO+PsuXP8R8bFibJ8zyVK4AgCMjNHYMuZcGk9sK+TJTAxPjFfoe5SkR9
      vYwxPP7YBazdvDmSVYo3E9Jfv8LvP+bXjyaJWEeBqWQAADh3ehWy0wQiVpzuF6MWnwRBwPLC
      PF5/5dWWNSOit3gUOOrEHoSpZADGGJbnc1jJAOjDyxvUnv/lD6YUxhMbFhcXcOHsKdy7cQNv
      vX6trx4HJd5HkfiBKWUAANjc3MLW1tZQ2zwsWZcxhnw+h8ceuxCruBePOLoO/Q0y9/qtRZOO
      Qd/ZVCrBAOC4QMlWIXVkO8dHP2EN3dtrr+7G99ENjYaGTDY3cP/9YhoI3o9Bxzy1DHDu7Gk8
      sVWEZdyHpunYaCbgpJfARBlM7H8W7YcB/C9hz8mg0dCQSrVKN0Ztc3d3F8cWo1WN6BeDWHW6
      hUccFga13k0tA5w4fhxz4gs4vqpCkQvYLVVRqd1Cw5Hwhn4cUPurOhCXQIIePktkUSpXPAaI
      ir29EhZPxnfcDRNh9x4WrtDruknH1DIAAMwV8pgvtNzcmfQBsdV+cAf3MHjZDcc24ZoGXEtH
      2qkgh2qbid9Lc/Efcx3UKhngxPL+79FmqFwuA63RQDqT6Wu8g86GgxJxVIao1RvY2NiiClXB
      AmzHQRb8jbFgvwtr/xI2mqllAMdxYBoNAJ1xHitZFhgrFAmuA7O0Adms4OllAbkMw3wuhWwm
      j4SycHBaD0K7cWcDpVIZhUJ0RpRlGdVKtS8GCHJgjRNx+lMUBels5z1SZT1/e+2fW2eGfT44
      dT8tyfV/bu9nahlAEATISipQZEmnVNhbNYjqwUN2zCZQ3YAs2LBdEU56EUxKALaFRP0+HAhw
      AVzK6Xj62UWkUycHGt+F08u4/3Abd8tlnD4TTaypNnRcePwMAGBvZxfzC8ci9xdHdBt1gFuv
      dmVFRjqdGknfcTG1DAAAthM866wsH8OpzXu4X0zBkVKQzBqeXTTx2IUCkqoCw7Dw5p01WBCR
      z0g498QxOI4DURAgy+2PJIhYosx2jDGcWlnEtRsPIhNnU2/ttbW3s4PKzg40rYHVU6d6Xhdn
      XP1imKEiw2a7QcY21QxQb2hw5mWIvsQUWZbw0befhGlaqDV0pFMFKBxhJ5Mi3nb5lHd+GMKW
      4agwLRs2ix6Wcf7sKbz56qs4uXIcj1++hJdfuRbKAMMQdYIYczyJ8ZODqWaAdFKG2CW2X5Yl
      zOW7y9Nhpr1hzHZ3H2zj5OmzkYkpn8/h2aef9L4X8jk0dR2JEe/jHHTPw2KEcViKBnlXU+sJ
      dl0XljmcnQn97Q5rqa81nZ6lvLthZeU49gJyBoat6Ha75368wv5kmknG1DKAZVmQpfY4oLhy
      +ihRqtSRyRcGakNRFCQVETtDDvk4CujFtFExtSJQtVqFLIw2EnQQ3F3fwYUnnh64neXlJbz2
      +o+wsLQEoDMRP+xl375+A0m5fX7jg0ZaZkH34HPbh44vOCi63/mr94uvoaDmWvm63at69AIl
      +lD+NlUHp21paXuqKCLX1DJAqbjb5vwCRpO80S8cNrxHy+Di/t17WFldgdCj2BM9A9M0cPWx
      S/H7iiBe8YznP7/XKmxZFn50cy32uPyglEjGGHRdhyzLHjMwxtq2UurazsAjOSTomgZZHjwU
      ehR46c27OHP+4tDau3L5ElaX5nHn1u2e57517Rp2t7cjZaXxiBMIGBj+ESeQcEDxlBiQiF1R
      FO87/Y26w+bUrgCWbUGQJo9/6w0dqewclMTwdqahHXNE1k58O1vb++VAHAAM1UoFuVQSjUrZ
      23O4X4y6PtGgQXl8aRvHcfoOI59aBoALCCw4fe8wFeA7D3dx6sLlkbSdSiaw8WAdWq0CMAY1
      kcDC/BwEUYBhmDixcAai2EpvfPGF73jX8YQShiBzZS8mGJaJNG47ptnSISRJ8sQdQRC86haU
      Cx2lNujUMoBpGmABFsYoxD9KZ4/juDAME6ra2/xJShvJrgC8lxk0vtXVFayvP8SpSxc6qh2k
      021fkc8f5BUc1oQQxkD+I3FXAzqX38meQM+Sqlv0WhmmlgEcy0CQChNl6aaHw+8pzFdO4F9I
      3N3aL55ewp37NyFnjmG5x46QfE0e4GDvXp5B/YS+snIi1nj4vvrBMCJMh82AVOGPPhNc123T
      B6K8u6lkANd1YVsGALXjeJyZhEog8ju8D/qykmoCy8fyKBossgjBv0x+dut1L6OS0w8jHCLO
      u+tZ7GpfBIqCqWQAAHCc4HjnKDdO1gKSjekz2Y/7VdDoGsO0oChp71jYmLrNUFFXnqBxDtND
      3Ov3KM+p4xmMWCKLc/+TZ0aJANd1YZv9WzkYY22zLS2XiqK0/RaXCcg7uVuuIx8jD2AkmAx3
      SAgmJ0RiKleARqOBCXUBAGgl7PMYtUmRcNjhH93QJu4FTCyH5cCcyhXg7p01LC0MFmfTDybF
      yxwJY+KFvsqojGlsUd7X1DGA67p4841rh7YZdb8J84OUXIly3STP/r1wmGHSU8cAu7u7OHsi
      C0kanwwUVECqF4YVEhzUZ1Axq2HAb5Yd5Yo3Kavp1OkAxeIeUurwwgyiYJjx7cPWB0Lb6oO+
      yD8SZCEjUzFZp8hM67qu55GNMerWECeACaaKAVzXRbW8hzk1fvXnw4TfXDgsJhi22MOHkvD+
      EfrOj5tCkYOu74X1ja3gfG6Kq2b7H1zWlZEjsw9rCcyMMVw4fwYJLk5rqhjAsizo1V2IqeGW
      DxyHlSaICbqd60dY7m54I/HGBxw4mPg4+27jpJUhrni4cPwEzl+5En+AA8K2bVy/dQtJieHs
      mZO4v74xXQzAGIMQYevLuBiXAhlVth7ECTese4niiONDNcaR+zsoRFHEuUuX0NR1vHnzHuYX
      l6ZLCRZFEQsnzqPeGCzU97DRl+nQd31Ymx4OkQYn3SKVUFWcvXQJuUJ+ulYAYLKyvoaFqPc0
      6YTFwz/WSX1nU8cApmlAGaMJdFwIk/sPIzBt9Jice5kqEYgxhmyugIbW7Pv6aQLPFLFn/wlZ
      LAZxAI4DU8UAAHD8+HFoZvdh83Z7XjYeZXZT2DgO/sH3z+37X1g/rQSR/fOGfjdHE1MnAkmS
      hJWzV/Cv/ssfwvKXHWyvzeEdaiulDd85Lv1EVhQHV89ksbraLfGkR8KNk0L5xr2u5wSBRmea
      JhrVMuaPLXg/sNZ/7X+9i9rvi4Fhr1yN3f+jiKljAMYYNL2JPScHO27pEY7YO5Q07B9zXWTm
      FnDyQvySIsNCU9dR3FzHqbNn247H8R006rVRDC02RmW04BOGyB8RZLrtpUNNnQgEAOfPncWV
      E713Xwm76TAxonXRICMbPSZZnh4n+B3vaad7frd7+k6/O47jJdPzmEoGEEURz15a7XleP2bD
      w4oyjQLa0NqPSTaPjophKfHdtu22uCRaDWzb5vQixzvP/6ymTgQiHMtnWtrkkB/w5KiP7ffF
      v2AKVaBjk8oAo1ytaKf7QTG1DFCqNoZO/AB6mg/Hld1FffEICjeYVOIfNYbFXFMpAgHAS9cf
      jL3PccrfYV3xFSwof3mG/jG1K0AqqQDozyE2CMYz44b3wVs1SCTiQ5cJCTWJ19661Yoqhrsv
      ULF9Ea+90rNeq2BBNb2eA4zFB99cn2k5cOyt9skoy1/vOi6sSg0PXtnpLWy6LuT501g+dabX
      mT2aCbdETSUDuK6Lu5tljHMBG6foEwbqn6rHdRvT6QsXIre79uq38f5Tw/cbhK+YIoDeZlrb
      cfHVjR0AvRnAdV00m02oqgpd16GqaptSzOtPPENMHQO4rotXrr2Bjdp4ifGwid8Pf1GvI4sY
      j533+DcaDa/cDVmEqPYTEb9lWdOpA3zhm6/CxtELiCOEvXNe8SUT31FHP2oXiYVUJhFoRRDQ
      HgJkTmaMTR8DbG9v49W7pcjnT6PjKOqIB8kpOGpgjEGSJOi6DkVRvKK4oihClmVIkgTLspBI
      JLyNNSRJmj4RKJfLIZsQoGnRr4klv08Av/RDz4+EONQDsixDllvxYWQd430FtGEh/RVFcfpW
      gEQigV/44LOQEFwblEfUHNw28ElVh7x6+Jk2jIkHHucRWUD6EQunbgVgjOFD73sOlmXgvz3/
      BpwuPDxoINYkOZu6jWHg8U3AqheGSqkE6/btgwN0q35bLQOaTcOz9Ni2BUVRPLOt67pwbBuS
      LLUCCPYvmzoGAFrL24ff/27c2SjiSy9vjsYjjN7VGSaBMQiTNJZhIp/NYHX1eKRzDcOAbdtI
      JFQ0my1TqG3bMAwDiqLAsmwIAgPA4Dgty9BUMgAASKKIX/74T+KFa7+Pit3/ZtTdcKhERX6n
      sYxhcpcAURRbM3nEc4GWeVNRFCiKAl3XkUgkoCgKRNHy9EFRTLSsQaMc/CjBGEM2m8WZxUys
      a4aFqPJ535hcmoyMcU8gruvCtm2P+GnzPFmWPZ+ALMttTsSpXQEIdsyHPAyPbhDxm6bZVkiK
      LyfIWGsjN5qhhhW/Q+Y8apt3BEXZIO6ogd8PjC/yRSALEf0FpjgYDmgRwHapMdY+u1liKD6d
      GAI42MiNGG8Ypkq/Q4xPPCemGAei5FsPes+jvpOpXgEkScKVM4vY/lE59Jy4liDW0pFigZwq
      fKAaT5R9mWO7gPrhSxjyHs9xMACJGxRqABz4IujeyevKr1Bx9vNtS3ceEaZ6BQCAdz1xNrbn
      qFe9y35A7nfPxb7/l2RP/l+/8I+N2qf+qK9xlSLhVyBa6eg4AC8Tiz5Potd6qlcAAFCTKkTm
      dI0NirMKOC7w4mvrOHly5fD3+RoT+iFJWvUOrCqdNUJ5WTtoNRzZ4GJg6leAZ5+6go8/dwpw
      48mZ3V7EnpHAZ774Q2xubA46vKFikNmz26rQ71oRJuJ1+xe/k/7GRiIav/IE/Zt6BhAEAb/4
      8Q/inedy/QXRhKBoSPjsl1/Dndt3htbmuBGd8I6etch1XRiGAaDlIOMrR1ClCNM0p58BGGNQ
      VRW/8emfw09engOLsRL0Ioy6k8Dn/uo6rl+/NWbZdfC+4sy2k1MIYHhgjEFRFE9R53UkPpNu
      6hmAkE6l8A9+6Wexmh3uy7QEFZ9/4S5efvn1MTLB+EI7xoGB4rEG6JNCoXlHmCiKrTDo/X9H
      hgEAQFVVfOqjb4fs6PvJDi6Ylw/rxRbEbteEhK+8vI1vfvP7E2fFCIM/V6DbuCe5FtKoMfVW
      ID9URUZStFCFi3eeTSMtu3j1+n24jgMmiLDAUMJ87HYdJuHFm3U0re/iA+97O8QY9uzDxrQw
      bQfGwJfT8xYj4sqVy/j3//QUPvf8N7Gz+RDrVQG7mIPLBDDXht/wFSc0wmUifnBHx4Pdb+Fv
      vO8yFpeXRnAHM4wTR0oEAloJM4vH5vH3fvHjEEUJz5xbhCgAYAwuk+CyzluOZaJjAjbrAv7o
      +Vdw/976cAfvYbgz9jicYtMad3TkGIBH3RJRt0VcXWkV0vV7IslWzH+n2JWuBXQBNFwVf/K1
      N3Hzxu2O8w4bvPkziuf5sASkSchpPtIM8OPPXML/++FD3Lq/Bck+SCKmh06BY3wFYdd1vc9U
      ZZj+0u/ENLqr4M++tYZXXr423IEPSA+HTVR+9JpMumHUC8uRZQDGGC6fX4EAByXkYYnB5dSJ
      oPld0ilwy1+Lk1YHftUwIeMvXtrCt7/z8kQRHYEP0AvDOOOGxtlnFBw5JZjH/Pw8FtIiNurB
      M44kSV7ShB/d0iH9VYkdJuMbb5Rgu6/gPe+8CjaUeP/Bc5mBdgYIU/jH6uKLEZc1DhZhmqa5
      qqqOoavxw3Vd3Lh9B//u955HSXNgon1LpW4vop/ZnMHBc2eT+In3vn2g0t2Neg03X/oOCr5g
      PH9NTn9+uPfNSxjvrATKfNnkLoCd9fu4uhi+93LYU4psN+h2YJ8hWivE/jth3k+4Wcshv3SK
      O7+9qUhvyQXAXO4zvN20jjQDAC1CrlZr2Cvu4V/+9y+iZMq9L/JdH+8CB0+vSPjQB94JSY7X
      F6FaLmO+/ArOnSjEui6IobuJHfTbD97axOrT7+9jpMNDvd7AWtnC/PLKWPs9sjoAgTGGXC6L
      M6dPYy7dIsiRKolMwCvrFr70lW/DCtiSJzL6GF5QtGO337thXDK6Z7EaS2+dONI6AI8vfPmv
      cK9kA1zeQBwFMRbDMAGvb7own38BP/ORd0euanDQ55GpVdWGXiKnbVow9yM4A6/v1b7AIErx
      Vt1HhgEsl8F02+viE6IwQmwwhus7wP/94ov4xE+/G3IsJhhvKfagnobZf5TnurezheVrf4qU
      xPlperfc9m1NOoPFD3w61tgeGQa4dGYFSeENaE57llJ0e3QfRMkYbheB//P8d/CJj74rMhMw
      NtTUht79ja+rcNgWruR15JT+b7yqxd8w5cjrAITLj13Eb/7tD0IVwmuKjmTWZQy391z8yRe/
      Da3e8P10EIKxde821q99F9v316DXayhkR1Psa5IxMCP20cAjwwCMMTx15TF8+sNPQcSB02tM
      veNOieFzX/oOapWDnVj4UOVscwMfeEzFBXkT2dpNHMv13gd5WBjHU+iteLsDc0A/lz8yDABQ
      Yd134m1nCzgMNXO9JuJzX/ouyqWD/Q1ct5WvUDNbItbx+RSeOlOYGE/psNE9L2HQxsN/oqoV
      /soVjxQDAICiKPi1T34AeckEPbGBkrZjgWFTU/DHX/ge9nb3uMPMq6dz1BCkOwUm6gxjNe7y
      +Cjcxf/vkWMAAFhcXMS//vVP4ET2cG5/z1Tx2ed/iL2dXe+YoObgOEfP+NltxueZgPzScXwV
      /YJWgUeWARhjWF05gX/xKz+NMwUW+aEPc4YumQo+8/xL2NluMYEjqTBMu8dVRxnhpRWHAT4P
      WJIkL1/4kWQAoEXMp0+u4NRCtuO38SjHDBUrgc88/zJ2tneQnlvC+m7vrUOnEZFEzH0deJBa
      QqyLEhBWp+iRZQDCr/78R/ChK50V4IbFBL1eYM1W8Jm/eA0P19ehyNPjlgkq0xh0Trfz/L8P
      s25qVDzyDFAo5HF2ZTFUfxpUJo1yTc2S8JcvXsd8Nl7IxLQijPB7kX+vd0ERRXHe0yPPAIwx
      zOVz6BYiEXbdMC1HdZbCna14pd796ZyjAiUChZU5p5LwfGVoyrSL0cvA2V/9FPh65BkAAFLJ
      BATEqy06bIKzWAK/90IFdgyiIVMepWuapumV/KO/tm17exX0C77OpmEYME3T64MIn1JHm80m
      TNOEYRhtx2n/rh49df2112TD6xBRMWMAAMeXFvDYchJJwUSSGZD2PcW9bNP9iqFMIfIAABfZ
      SURBVEVhL2jXzuD12zuR2qB9Aeivv21KiI+TgdUNlCZKFdfo3vnE+8FKs7uxHWH+Z3/CeoDG
      W3/Npa5G2Er3qCfEREWtVkO93oALF9u7Jaw92IDjAH/xvRt4cBC90F94tA/d2lhWavg770rh
      8VNzfbcfF99/axMnB0yIIYdXL+IPO+fuW9fwrt0/RSJGIl3Q89Nshhecq7D1OgRRgPJjn4Kc
      CI+rmh6zw4iRyWSQybQ23Du+vIyrTzwO13Xxofe+A7/1X/8YN3ftthzAvqJDfQhihL2mgnu7
      Bh4/FXbVZKNbaDnv+Aq0Gg2h/6To4qfEV8AUhqrJ8Oc/+Etklk8hc/wsBFEEY636oGx/tZox
      wD7q9TrW7tyFKMlgcPBwaw+rxxdx8cJ5/ONP/wz+4M+/jlfWdqHKDDWDoWGHb0LXizHCCEBy
      dPz9dwt4+vyjWXFuWH5GerZZ2cUv4etobDOs35FRVRagWQyOXsP25V/A0unzMwYgJJNJnDq5
      it//ky/huScvtqljJ5aX8I9+9edRLJagqgm89Nqb+O3PfR8OC16vo6wOxAT8ec8sGnjmwpRO
      /Rx65SbT9/bz4usAUZGSXFzMGQBalfycNPCt1/8QW87fmjEAQRAEZLNZ/PqnfwFAsKNnfr4l
      lz/z5ONY+cI3kc/n8fqm2fer8xNFSjkaNonDro/UK8NPYMCPL9ZRXP/dGQPwiGq9SKfT+Lf/
      /NcgSSL+4M++is9/7y5MtzPX2N92L8IQWf/bPE0K0Q2COCLQoDFbAgOOqY9oMNwgaDab+NYL
      L8JxHciyjE9/8mP49Y+/DTJ6m9y6bV6dgoZ3nOuMS4qK6Q+ljr6ODpPZZwzQBXvFIuqNdu9s
      IpFAOpfHV7/xonfsJ9/zDvzmp96PrNx9Bqeyi0EFa9+zauDy6Xh1gPxhAf0ywSQEYQ+LfeM+
      gxkDdIEgCKiUOzfhfubJK/i5j/2U950xhmefuoxf+ejTYOhMbOHNnWHEWtEPjwwnZe2IMo5B
      Z3+/83LGAF1QyOdx4sSJtmOapuHmreBN8973rmdRkMLr2gAILb2+Vhbw1ZdGtd9AdwxCUsMU
      vUYpxfkJ/5FNiRwUyWQS33v5dWxtd4YsSJKEEwu5juNhsxYfOLZj5/H1G/HLevTqIwoGpbu+
      Ra8+w0iCokn7DcGYWYH6wCc//rFAOZ4xhqvnl/Hmxh04vp1oGGOAY0FwLYiwwVwbKUVAIaMi
      qYjIu3t47+XBwh/6ZYJBVoBhiCT9tjOM1WfGAH1ADil6yxjDR977DrzwwzeRy2Ywn88gIQmY
      y6hYmMtCVRPIplOYK+SRTLbKnoiiiLXbN5HXf4RCVu3QEcZi3pwELXiAMQTpVVFrn84YYMiY
      m5vDv/knv4pms+nJ+/y/bDYLQRBQr9cBtEKajy0sYethEw/X76OQMLA8l/Lk4WHEHPXEBGjB
      LtoNBFEtW0FyfaT+9s+dMcAIoCgKNE2DZXX6BkzTRDabhaZpcBwHuq4jk8kg9/iTYOwpFIt7
      uHHvJuzaQ5zIiyhkH5FI3RBC9odMDCIqBV07Y4AhgzEGSZKgKEogAxiGgWq1CkmSYBgGJEny
      9ipzXRf5fAGFwnNgjGF9/QFeX78J2dzDyYUk1IQ03qKhPTBoog0Pq2eyzODiYBAjzBhgBGCM
      IZVKeRlSPChzi16GKIqwLKvNS0zi0vLycRw/fgKWZeH+vTU0Nu4hxWpYXUhDEoVDDX8wmgbu
      fOV3MMcVGOsA26/G3XOYDIvMADoNaACGp2i3htQuUs0YYEQQRRGZTAamaXbkxvK5s2RNMk0z
      cB8BSiM8feY8xPOXUK/XcfvODRil+1jMOFiaSw+dERhjWLu11lqVDo62qQq2bUNWkriQLKIg
      DW8lGARRo3B5zBhgRKCk8KDEcJrhKYUwmUwin2+VZmk0GjAMw2MM/oXZtg1FUXD+0hOQ5Wew
      t7uLN+5dB9O2sTInIZtO9CciBVySSedw9erVrsqo8L73441vfxmZ9c9CihnINwrwaZpRMWOA
      EUIQBAiC0LM6gizLHsGn02nIsgxZlsEYQ7Va9ZLP6eWSaJXOZPD4U88BADY31vFgcw2yuYdT
      i2kklBi5hayzXg+AttXL72wixjj/7E/g2r3v46p0G8Ih2VNpTJSE79+gkGcKv/9mlhM8Qriu
      i2aziRJXDZoHyf3JZBLpdDrwHNM00Wg0vKoMlPAdaNHYV6jv3bkFs7oJ1402K++WNSQLS20E
      PleYx+rqagcDyLLcsbI5joMbP/g6zqz/Wc9QkFGDNzzQKssXHvZviTtjgBHDdV1Uq1U0Gp2b
      Y9BMlc1mkeiSuA20xJ9areaVG+kVDx+093E3lEolZDIZ7zrXdTusWMQA6XQatVrNYwTXdSHL
      Mu6+8k0cu/lZzMv9h3QMiqC8Yz77zr8CzESgEYOI0a+g8SKNpmltYlAQRFH0GKaXsue6bmwT
      JRF12EpE7VK9IaA9sM80TZx++r24qyQhvPG7mFOsQ7FS8WVhuh0jzILhxgBVVZHJZDpeAM2g
      hmFA18M3qgbaZ7FREJau60ilUj3Pc10XmqYFFrkyTROnL78dm4/9Mu40VIBNPnlN/giPAARB
      QDKZ9GZ48gATIVOFt14YJHAsyhi7rUD8GLr1b5omzj31Y8j+7G/htcRz0OwYyvghYMYAYwJP
      YJVKBZVKBcViETs7O6jX6yiXy7h161ZXi5GiKEOtR8pDluUOPSUMvOwfBMMwoCgJXPrwr+At
      9dmJTtecMcAYkUql2ohB13UYhoFarYZarYadnZ3A8AngQJfoJqMPAsYYEolEzIK24SB9IXfx
      Pahak6tqzhhgjEgkElBVFdlsFqlUCouLi8jlclAUBdlsFmfPnu1qvREEwfMPjAKMsaHG97iu
      i5MXn8Dt5DMTuwrMGGAMcBwH5f3cYipYm0wmPfPh3Nyc91cQBJim2RFDRKDtfYYNUrKHHX5t
      WRaMwvmhtTdsTO7adIRw9+5dLzhud3cXhmEgkUigWCwin897cUC1Wg2WZSGTyUAURdRqNayu
      roL305DjbJgzNYEqTQ9aZYKH67pIFRbR3BSgsGh7oDHGULcYBNaq9ckz5TCZc1YbdExwnFYN
      oWKxiHK5jFQqhWaziWQy6bnuy+UylpZa3thKpQJJklCpVJDL5eB3VCaTSTQajUB9YZAZnDzX
      qtqZmdYvXNfF+ceewI/eOI2nxNs9z69YEtbYGWDlbUjlj0HbuA4IIsT6Jhr1Bt6u3Iq9l0M3
      zDzBY4Bt2ygWi0gkErAsC4qiwDAMaJoGxhgajQZUVfXEI6DlHW42m8jlcoFyv67rKJfLbcRe
      KpVg2zZyuRyazSYURYFpmpBlubUl6H77lmUhnU53JJoQU5JJdlgWJ1EUsbn2JlIv/08sKY3Q
      gD3GGF5LPIfHP/Z3O+J6RFGEaRp44TP/GR/K3Igc5hHWD7Av9s0Y4HDguq5nAQoSZ0RRRC7X
      CpC3LKvNj0DXl0qlNl3BMAzs7bU24FYUxWMC27YhiqLHUNVqFUtLSx26hK7rUFXVswRRtOow
      xA5JklDa28bON34HV+U7gW2WDBGVd/8zHFs6ERrrpOsabv315/CU/m0oA5SSBPZjheLdxgzD
      Apkd5+fnA02btm2jUql4M7ZhGB1EoShKGxFTuDSFVs/NzSGTyXgRpvPz8xBFsYOZaDzDlv95
      WJaFbH4epz72D/Fa7oO4bi6BcZ5ixhjuW3NYWF4JZTjbtpFIqHjiw5/Cj+Y+hLodXYIPIn5g
      JgL1DZpVh4FuAXOqqiKVSkHTNGQyGY9wLctCtVpti/sZqDYQY9B13at4EVR7xx9g1i8kSYJj
      W7jx3a9gYfMbWJUr2DIUlC5/CqevvD1UweeZVlEUvP6V/4WrtW903R+Yxh6G2QrQJ4ZbEY0h
      k8l0RITyEZl+mZ2C0iikOo687q8pCrQU9SihEPyY+4VlWXBc4PH3/DSkn/gNfFd8B7bOfALn
      nnpnIPEH3ZthGFh+5iN4qA1mx5mtABME27ZRKpU6iECWZWSz2TZluNlsQtd1z5JE4clR4D+P
      b5N0AD/RaZqGer0OSZJQKBSgaZqnU/iz1yqVCrLZbEc4chDTWJblWbm6ecGDrpVlGW9++ffw
      tPZCz/Bwgl/EmzHAhMG2bZTLZRhGe2KJLMvI5/PejO8XRyqVSluAXTeEMQBjDIZhQJbljtj5
      7e1tLC0tYWtrC5ZleeeYpolEIuHpEOVyGYlEwnPyUZsAcPz48bZ+ieC7eb97rWy7D+8i9d3/
      iGNycCJOmMjmZYiFtjzDoYCS6f0v3TRN6LrubUrtl8/5ZJa4IHGotbWoHUg02WwW29vbUFUV
      +XweiUTCy2WmNE3HcZBOpz3Fm19JqBIeD8uyeo65V/TpiTMXsZZ5rk2h7nU9/+xmjrBDRJjc
      HaZck6eYrDz+awqFAur1euSoTgKtKMQAfq8rEXAymWwjHlpJeCsWzzzZbPiGH47jBFbBCEI3
      y5Rpmsicewf0119Eosd0PkuImSCQHyAuaFf4IFDeQVjt0jDQzu9AK2LVn7nGhz/zq0UYoijI
      5JgbFK7r4tylK3gz/wFU7e73HbSSzBjgEBFEqK7rolgswrKstn+2bXv+gLBAOQqZzmQyXaNG
      /ccp13cYCTG9mIPOoTGUy+W2QmFAS+Hmoet6xzHyoAOtSeGJD/5N3Mq/F5Ybj6RnSvAhg5e7
      yfPabDbbrDokSxPh5PP5jvggHkSExDiapnVYlngiFQQBzWaz68oxjNmaQKEfxMzpdBp7e3tI
      p9Mol8ueCJhKpbyqDs1mE9lsFpVKBYuLi9jZ2fFWprm5OS+6dv1PfwuPJYuRrUKzFWACUK/X
      USwWUSwWUSqVIIoiVFUNNN9RTm4vEUQURS//oBfxUhRoWFrmsL3CqVQKjuNAkiRomoZarQZB
      EFAsFqHrOgRB8AoMV6tVGIYBxlo1knhDADEG/bMsC/rFn8F9PRk5H3m2AkwAHMdBo9HwlnR/
      zE9Q+iH5BqIokqVSqU3fCKtY5w+HBoYXEMeDvM6JRMLTBXgm5P0KvDmWxuUvKEwhIGSWtS0D
      u8//BzyW2A7tnzBbASYAgiAgnU57VRmCzHZBZlEKhegFmuBIzOqWAB9WynFYqZIE6l8URTiO
      g2q16oWX0P0KghD4na4D2pVpMsfOH1uEnpgPZNw2b7ozM4NODCjuhwpfAcG7SvIET5lj5IgK
      g6IoXmg0tUUExfcRVDjKbxEaVpIM364kSV5ox8bGhmfJonpJlDBkGAbS6TTq9TpkWYYoipib
      m2trK5lMthTmuXNwite9OKGgcWsWm60AkwR6oZQa6RdFglCpVAIjRXmQ4jw/P+852Ujh5iFJ
      klecN2zGH1ZGFh8e0Wg0oOs6qtUqms2m50U2TdMLuSAvd6VS8SpY1Ot1r54SP1FYlgUxVehZ
      qTSrzPIBJhZUO6her3vmTTKJ+pFMJr1I0V4zNIVakOfWr18YhoFkMolyuYxMJhPYRlCkaBS7
      Pk/0mqZ53mESsfiQDHoGjuOgWCxiYWHBW6F43YBWB371qtfrSKWSuPv538YT0r2uY5qtABMK
      EolyuVzbzB2EZrOJRqMBTdN6ztCCIEBV1bYK1DzhUfZYoVCI7KijVaNXQJ5t257pUxAE6Lru
      yfLEvG0KqiBAkiQsLi56qxaNk4g/KGFHFEVIkgzp6U+ianYPWZ8xwARD13VvZiRlkJ9lTdNs
      MweSybBSqXS0RSsKhTXkcrm2CFOyoBBBdvM4+73Dsix7zKppWqBYQrN2IpHwzLPJZNJL+okL
      wzAgimKg70JVVdRqNZw8cx4Pmp0xSDxmItCEwnVdvPrqq3AcBysrK55Ti88R0DQN2WwW1WrV
      Y45W1lRLKU6n095eAmR7NwwDhUIBhULBywPe29vzNuujtimKk8SLMFBkqH/mNgzDa0sURRiG
      4YlUfv8GRaBGBSn+fvArWbPZRCaTwVvf/wYSt7+ME+IeslKnn2PGABMK13Xx+uuve/nARMSk
      oObzeU8xJEcSze6SJCGZTGJtbQ1PPvkktre32wrxptNpnDt3Do7jeHH+QKd/gLex0+9+BDFA
      L/hFHV3XIwfGAfDKyoQxJrVNodqiKOLOte/AuP41HLfuYTHJWddmDDCZoJggepmUApnNZqGq
      KtLpNDY3N2FZVtuMKEkS5ufnsbe355VUIcsKeVOpMp1lWZ5CHBbk5g/V8DvpgM7dY6KCvzc+
      LDqMsPn++HsO8pjzCnEikfB27nx45yaK3/0jCGYdEptZgaYGQSHBjuNgY2MDwMELFwQBhUKh
      bT+BMDSbzTZ9gbcIBQW98YkwALySK4S48UKMMY/h+L0PePBh2vfu3WvtqZzLeToA1Vyi1SyX
      y6FYLGJ5eRmlUgnJZNKbDGq1GpaWlrzSL47jzBxh04Kg2bVer2Nvbw/ZbNYTVwzD8GoJ9QIp
      kSSr8wQcZCKVJMkrtQIcMES/cF3X2y/ZzwA8w5PpM5VKoVKpeN8pJbTRaMA0TY/IiXlLpRIa
      jQYymQw2NzeRSqVQr9fb7nO2Akwxms0m7t+/j0ql4sXwZDIZzM3NoVAoRLLLE9OQxYlADOAX
      icjpRrve8H30EzGqaVpHQo0/IYfvm0yo/H5psix7vgvSjSiwT1EUNBoNzyCgqmqbuDVjgCmG
      ZVnY2toC0FoNVFWFKIqerb9QKPRsgxcxLMuCpmneNq3+FYAvBRNkf++HAZrNJiRJ6lhJosQe
      CYKARqPhhULTuMJ0EfJr8LrDjAGmHKZpYnd3t+M4Ywzz8/ORRRQioJ2dHWxsbHizcqPRQDab
      Rb1e93J+KZKTCvnyfca1BhmG4a0m/PW9Em8AeFYtiiQlwg5iRNpq1l/3aKYDTDnCYvgpb4B3
      onUD/Z7NZrG3t4dms+nF7JfLZViWBcYYisWiJ0vztn3K7FIUxfM5kGON/AIU0EZxPiSO8Mo1
      H6JBRBo0fmqTFFoKpeYVa0r0IcJvE33225sxwBGGpmleck2cKnZU1YGcWaZpeoQrCAI0TUMq
      lWqr9EABd9vb255XmUywxDwkgjQaDU+hXVhYaBN3KCGGj3Ale77fR8HHBHWr/EA+gyBL2kwE
      mmLQjFmr1UJ3maQQhbjyOc3glHPAJ+aYptnhEzAMA/V6HYVCAaVSyatH2mg0vNBlxhi2tra8
      LLVUKtVmUbIsq62CNk/UxMwUGEizO+9A4xmCNh7k8wmAA6uSJ3LNGGC6QaERjUbDE1t4pNNp
      pNPpvhRUCkcmyw8pywA8Ig1SVv198d/5ukN+8BleQSsWXUdmUyrnzoOuJwb16xK8v0QUxZkI
      NO2gGU1VVSiKEhpcFiW3wA+auS3LQr1e9xRJ0g34GB6+fX9pRT6RhgibX1X4kiuCIMCyrMDQ
      buqDQi9oPNQXfTYMo23PY7+nmJhAluXZCnBUQAREdUJJ3pYkydtngOJ6ouQN+NvWNA2NRsOr
      NgEchElIktSRTeYXO4L6o0A4ku/587uZQaksjKqqXoTrgwcPsLy87HmnKVSaRCpimmq16j0D
      QRBmK8BRARGZoigoFApexpRlWZ6jjMyW/n0ForRN8jrl7hLB8+Xa44hZFMLNizBhDjAetm23
      1TCybRuZTMarQkfhD7xVqFKptFXZIEXbtu3ZCnBUQbO2P3FeEATkcrmeecRhsCwLxWKxo86Q
      X24PyhrjP/szwqLmBJDYRH3RCkLmzlY2WMorO8l7tKncCtDyd8zPz89WgKMKCo0mouCLbNXr
      dW/X+bgQRdEzYQYlzAcF0wXZ8P26QBSQj4B37lGfRNgUIEfBgLRK+X0LJ06caFmTYj+BGaYG
      JLpQNWcCWXf6ycQixvInpIiiGGqK9RO5bduxd7UhBvZ7tong6RzaTDyMweg7MeWMAY44SC+g
      vYcJVFGhHyYIEqOonyjj4TPUeKytrXkyO3mWgYN9BGRZRqlU6oha5R1mYeHUfiYgzESgRwDk
      PEqlUqhWqx2/9QNRFJHNZr2tWUkpNk0zsOY/9ePfh5h+o9yGlZUVbG5uejO5bdtYWVmBpmlt
      BYLv3buHEydOYH19HYqitOT5/ZiiIK9wmBlYGsWO4zNMJoLSHcPEligg2ZtPgidTLJ84Q78B
      7Qnyfpw+fRr1et0z29brdU9RfvDgAS5evIiNjQ3s7e3hzJkzaDQaWFpa8qw8Qe3yxO9nBNd1
      8f8BQpAk5E724m0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ex_2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z5gc13nn+6vUuad7cp7BRMRBDowgIZBgEkmRogIVHGTTsr2SdyV7732e
      XV+vbK+v177re9d6HFaWZclWlkgzgGJOIBKHyMAETM45dE/nUFXnfhgABIhIzAxmwK7fF2C6
      q0+/VX3+Ve85533fIwkhBBYWGYq82AZYWCwmCyYA0zTnvU0hBOl0et7bvR4W4vyul6ViixBi
      SdlyLc7NTSeAVCo17+1eD4ZhLLYJ51hKtiwlAVyLLZYLZJHRWAKwyGgsAVhkNJYALDIaSwAW
      GY0lAIuMxhKARUZjCcAio7EEYJHRWAKwyGjmJAAjnWRwcIiUrpNMpknGYximFVxqcfOgzuXD
      Q72d6Kqdrv4+tLRKSqRYsbx2vmyzsFhw5iQAh9NBz9AEeaXF9La2UrVhKxKg6zqmac575KYQ
      AsMwlkRE6FIKQFtqtiyFFJOz0aBXC4ibkwCEKZBkGUyJ5es2k4pNkTL82FUVXddR1Tk1fxGm
      aaIoCpqmzWu718tSsQOWhi1CCCRJmvff/XowTRMhBIqiXPG4OVlaWFFLYcX5r+TNpTkLixuO
      NQtkkdFYArDIaCwBWGQ0lgAsMhpLABYZjSUAi4zGEoBFRmMJwCKjsQRgkdFYArDIaCwBWGQ0
      lgAsMhpLABYZjSUAi4zGEoBFRmMJwCKjmVNCTCI0xanT3VStqEOPQToZpKi8Ek2W5ss+C4sF
      ZW5J8QN9CEVDUwWnjh9h2doNqNLC5gTrum7lBH+IpWZLxuQE2+xOasqL6e3qobRiGdGZIBTn
      oC5gTrCqqksi/xWWRh7uWZaCLRmXE1xWVcPp0+1U161E0kEyE6QNgU21XCCLm4M5CUBSbKxc
      vea8VxxzNMfC4sZizQJZZDSWACwyGksAFhmNJQCLjMYSgEVGYwnAIqOxBGCR0VgCsMhoLAFY
      ZDSWACwyGksAFhmNJQCLjMYSgEVGYwnAIqOxBGCR0cw5dSceDiE7XWAAIo1qc6BYOcEWi4QZ
      D5I69M+IeAB15aMoFVuvePycngDCSHLsvUNMRqcZ6Buiq2cQrL5vsYikj/wAtWYHtju+Sarp
      3xHxwBWPn9MToK+jDc3tIRqNM9DRSvXGrchYG2XfaJaaLYuZFG/EAkjuYtA8CM1FOh5GUj2X
      PX5OAsgpLCWVGkSVZOrXbiIVmbQ2yl4kloItSyEpXl77GVLvfRtUF6qvBC27DEm6vKMjiQWS
      60IJIB6P43a757Xd6yGdTi+JTgdLx5azT+jFrgohkmGMZATJlY9yFVsWv36FhcU8I9m9yJr7
      mlwxaxrUIqOxBGCR0VgCsFhQhID+sRn2nuwjFEuyBKomXoAlAIsFpa1/khf2t2Ga8J3nD5NI
      Lf4U9vlYg2CLBWXfqX6euHsVRTkeZqIJOoemaaguvOzxwtQhFQObB0le+PuzJQCLBWVdbSGv
      H+pi26oyTvdPcvf6ZZc9ViRCJPb+DZg6kisH+21fR1JsC2qfJQCLj4wQghNdYxxoGqCuLJed
      G6uQLxP/tXl5Kaoic6JzlC/tWovXZb9su+nWF9Dqd6FW3k7q6A8xBg+hVt6+UKcBWGMAi+tg
      aDLM/lMDfP4Ta4jGUxxoGrjssZIEG+qK+cyO1ZTkepGuFCumORGJEMJIIVJRUJ3zb/yHsJ4A
      FpfEnBkideInSKoL07UFraIWNTsbJImx6QjVxX5yspysrSmksWVwXr5TW/FJUu/9I4mO11FK
      NqAUr5uXdq+EJQCLixB6kuSBb6OufJLpZ3/GnnA/o2YtD//GI1QtK2R1VQGvHTrIdDjOwHiI
      33hg/dXbFALSKczpDhAGcuEaJPnCzSsk1Y79jv+0UKd1SSwBZDAjUxFebuzA73Hw4C11OGyz
      3UGkY6DYSY/EedNYQV7ZILdtvYt/+/Fr/ME3PkfPaAC304bP7WBMi5Lnc13xe4QQhHe/SLr1
      F0gigXPjFuS+g9i2fRXpij7RwmONATKURErnx8+/zV3x5ygYfJ6n3z517j3J4UPOKkaMvMBo
      sI9VVXUcae5nNAntg1PsOznAl+5dyydvq6ck10vfaPCK36UPDWGEQrhW5uD57F+RnK7EnOoE
      I3XRsaYQ6Lp5w0KqrSdAhiCEwOjdi967D7X6LiLeNbjigyx79NfInxzi/Xc7gQ0ASJKMbdtX
      Uae7ubcqwl8/cwI5J051Qx1vHu2htjSHfaf6WV9bRP/YDA/fVn/lL1cU0HVw5mCMHUPMtEGO
      E+QLu18ipfP9l48TiiYpL8jisztWoyoLe4+2BJAhGMNH0Qfex7bpN0kd/VeySmLYjTA/PRIl
      EFLZ4u694HhJklFya1mTAzVdCYpyPNy3tZYXD7Sztgj6Olp450iEL+1ai9t55bl6rbgYtaSE
      yLFh7IUHca2vx7b+yYvGAG8e6WbL8hI2ryjhub2nae4ZZ11t0XxfiguwBHATI4RgsK+feCJJ
      bX0t8hVWTs2JNtTK25CzilHLt2HGpvjCeoW+iedwixBFW++/5OeiiRShaJLjHWO8dqibNZ5J
      ivR2yvLrMKcP48j502uy1bvrXry77r3iMZIkYZ7d3lQI5BswPphTQkxocpi2nkGKKpdhE3bS
      yQCFZbMbZVsJMQuDmUwSeeVVzFSKg85c+gJx7JqCXVN48rFPXDZ8wIyMkXznr5AL12CONWHf
      8V+QXDmYE21IDh+SO59087OYM4PY1n4OHHmke/s4NCPQNTtrawo52jHC6J7v8oXf+SayJ5/k
      wX9ArdmBUrASmHtCTDKt84OXTzA1E6OmNIcn7l6Jcp3hEDdkm1RvbjF1mIT1FK0nTlG5Zv2C
      b5Sd6TnBoR/+CPvmTShOJ0d+8Sbf/MaXkVWNv/vOLwiFwrjcF8/IiK7XSJ1+CQmB5MpH/cR/
      w9BcoBuQXQuAceRfEY4c5PoHib35V8T7K5DLq3G3dLO3ZivLy3MYnQpTXVlGuutN5LJtGJOd
      SA2fwzzv9zjb8a4HGfjKA2s/aMswMK/zOt+QjbJnpkaIGm7KCm3EysqJhmeAnHOqu5r6Pipn
      Fb3YKXdnWQw7zHAY95o1oCj4Xftpa+vBZVcxVTsjwQQFsg1nTzuJU024tm5BK8kmOdCI+5Fv
      I0JDpI7+EHXVJy9qVw/2Yb/zCSSHDz2rhFccBQzE88nJV9kUHuTFg24aagrZtuKrpFtewGj6
      Jfbbv4bszrmwnQV48l8PZwVwJbcQ5igAU9cZGezCFJWUVlaAET+zUfbsl873HO/ZO8tizx2f
      ZSHOT+98HWPwONFTSUzdQ9ajj2CvqZl9PxHCVigT/NlPkWwOnihy8O5QgEg8he7I5ljXBENv
      neJOZYaNuz5BaPeLuG9bR6qzm9B7fwnpaWy+fkzfMVybNl7w3WrtTlL7/j8kXzmn+qawiRr+
      830r2fPKQSLla3jq7g/uzLY1j2PMzGBMTSH7TKQzN7qzSfFL4fe51r4yt6oQRRXkFFWc94q1
      UfZHIRRNMj4VoHTsZRQJhkQxbx04SkVS5fYVU9jv+h2m//kn5H3jP2KON5N4888wEgneGFvF
      qH0tQZuM3whx55Y1NPWH+PwnVjP00jDPBfPYVlyM2rCWF184RtSoYIfjCL4cFdumrxJrbMRe
      X4fi9Z6zRa26CyWnBjM6ierdhfreCcIvvoii5WK4LnSrkp2dhF96Ba2kmPAbb5LzW185J4Kb
      jcV/VmUYpik42DxA28AUe471EoolKVZiPFQyyomxPr7w6Qd469kTvB+CO2b6gNk7WeKd/4Hj
      3j/jJ3uGGR86QGcsSlFpOQ+UxNn31usknMWMBWpo85Vy6kgzf/6XPyEqJNbK4/TYVtEUWcEf
      +pKkG1tn07Qu8tMlOsJODrUqrK7SiJVU8L3pHLLcdn79QyHM0Xf34v/ikyg5Ocw8/QzpgQFs
      y5ZxM2IJ4AZhmoIXD7bzcmMn6bRBjj1NMJLCKadJmCr/1L+aHc7j7Nn/PrklPpo64qwe24P3
      /odmQyqNNOnWF+juLUBVPGzJCTA+Ps4rAQeFjgS7crt54VWFgZiTxyodbEpN8JdBH8cCOXzW
      N8gLhsqrLUnu8ySRHA5kx4VP6/6xIG8c7uGhddm8svtHbMub4dMbbsex4v6LQp210lISJ0/h
      WLMGfWQEJTf3Rl7KeUX51re+9a1LvZGMhXj95deR5BitXWEqSj/aSZqmedUByEdFCIGu69hs
      C5skcS2cLdJ1OQ6dHuJvf9nInhN9lAb3MfzK/8PPWmzo8RDLtHFOTjsAiSybAaZO3HTQpxdQ
      4ZPYN2Enp3YtY5UrKahbRvLIUbqPj+KceJOeuItU3lpGdT/dISejRja/uUFQqU2wad1KdG8l
      ausp6u7dztBYO4GoC3t+CSdjNtKV1TzwH38dvbcXW1UV8nmuzdH2ESoKsqgbexpX9W30OTdR
      G3wVtWgNku3CaWfbskpSXZ3EjxzBe98utMIPMryuZeB5Izg7BrjuQXA8FCQwE6Cn30XDxqss
      dVtgBGdINJ1AxIaJpj38qMUgO89Hx8Akf9qjU+XbznhcI1+J0hLJQUIgkAikbQhxZj1BwKmR
      NPfesoK20Si3rF3Gj149gT45SeXWL/L3jRvYIo8RmxpmLOFkuX0Yw+bn24fs3JOXRX5BAUfb
      R+iJ+XnvuaPkxCbwoLN7cBmlyhRZfSGe/+nr7FQUFL//AvvX1Rby/ZeOM52QOBAPUl5iJ6Da
      KDL1i85VUlW8u3bdiMs6rwgBvaMBGluGWF2Vz5qqwssLIJkU1C+vJhRNEY8nIPvKEX8ZhxDE
      RsZoHArzy3fbcE6OcguHSdtlqpxRBoP30TsdBwSSZKc1YMMrEkzgQ0dFkQSGOHunkij1SUR0
      jZGYj+cO9vBU1j7yX/43stLbWV22jJLV5bzU2InizecJ535eDTXQkK0xM9VDvPYuEnkbaeyO
      8Iefu5X+8Rne2tfMl6oqGEuO8tNuP1+875N4Q9P824Ee/F948qJBa47XxVOf3Mh3XxRsSB/A
      PbKf76bW8H/ek/+xmdoYnY7wwv42Hrq1nndP9AHS5QXQ232axmOt1K5agWFceTEhEzCFoHc4
      wOGmXgxk+oYmae0aY8aUkQGb7OTnxu1kRZLMJJ3o58pkSwghYUqCiGTHQEESgnNXVEggQSIR
      J6bbEEJGN0z2yFuYCZh0pySyhk9zpGuCRFzCqRznp8EGRsxsumZUin0F/P7WChr370UNKyiT
      LjzOGiCOPP0WRd4yfKkorX0VDI9NssHTiUhvRNIunL+XJMhyOxACup1biMRTRGTB+6eH2b6u
      8sZd6AWkezjA2poiaktzEEJwrGP08qEQpmnQ2XycnpEAW267kxzP5XM5L8XNHgoxOjFDJJ5i
      eCpE//AER7qm6J+IousGszXgBZIkEELm7EyNLAn8UoRp0zvbowQflIs/e5mlM4dL5/5z9oAz
      /0g02LtpTi1DQ6deG6TQFuFkopJKOUCbXkBCaKyzDeG0pWgWK1ntm8HvLSY9OsEQCZJZ1fxu
      TRcVy9ejVt5KpPU1jr/5Swpu+QJVuRrpo/+KWn0X6vIHkV0fCGFwIsTfP3uIoYkQmqpQWejD
      5dD4o8/fdk3XbKnUBoVLh0IEIwn++cWjbFpezInOMT5154rLPwFkWWF0cACHQ+NkyyB3b625
      IYZfjYW6uIGZKLGZIKMxwXvNg+w92U9SN/FLMcKmnTTKmT564Z39wx06dfaSnt+3mRWHiYyK
      Tpk6Sa9eCBJICOymjt0uM5NW0CST5uQyFAV22Q/xfnIlI6kiXFKYcdPDqpw4x6ZtfDavh4p7
      H+e/vA5PlJ5C6hrk50oVD3u76AxptIW9lE11YGgOlOFTrPcEca1aR7rleURkDOw+Yi/+N+Rl
      TyJn5SBXVfN+6xAOm0phtgefx07/+Ax3Npy/znNz43M7+O1PbqSld4LP71xDYbbnytOgReXL
      wOGjctnSeQTquo7d/tGeRpdCpGJEJgd4s3mGfSeGGIkapJJJUkLm/J47zTWMfc4cbgqJiHBd
      dFMHEGcEoguFXr0IENSpQ0yYPpLYcYgYMZwowkRHxa5KjBi5RISTPDEDAqZ1D75Uiiw5yt/p
      j+J9V2N5hY/89V9moO2v8WYVsu6uz+B96TB7betRqwsIfv9/kugMo/qc8OMvINIhtFWPYiTL
      SPcPknXvMiYbW/jJnm78FSWMTUcoy89CliWKsj3s2nLxjc8UgjeP9HCya5TiXC+fuXsVmrr0
      F8IkCfweB7etKT/32hUFEB7vpz0gwOahviJ/wQ1caPRYkI7hGZ575xQDExHC0Rghw8m5Hitd
      5Uc8fzr8Isfxwy7O+Z8TCAGSJFAlk7SY/R4TiZTQkGTBmO7BLyWIo+CXorjNJMf0Ogq0BE/5
      97B7poGAnIvHrqMmNfKzPTxwSy3ragrBNCha9QjuI/387TOnCdiK+OqWGsxUio6RbHrqt7Gx
      uBNjr0HWQ09iDL6AGOjAtupOZH8xLZ4A61ca7Ni+lhUVefzotZPUlGazsjKfguyL3c2ekQBD
      EyH+w2Nbeb91iLeO9nLfEvEQPiqXFcCp996ifSxMw633UV+RdyNtmjfiyTSDPR009QcZCOic
      6hxmMmpiColZ/+MSd/dLdeAP/33JD539R3zo7w8OEULCkGRylRBTRhZdegkuOUVlroPByQgV
      jhlOJ/KpsCX4Ss5BvjO+jlEjn3+P3MpUIgvVrTETiaGLbFY4Rti4bBOyqpBOm2Q9/Enubxjk
      f7/WQk1pPr862M6dyws4aDe51XyLF7tr+YStAp+vHklehVr3SUK73yL53X/GmdLorN9AKJpk
      aDLEF+9tYE1VAV6X7ZKxNNF4Gp/bTtvAFL0jwZvi7n85LjsIfuXpn+Epzqb55BQPPv4g5YX+
      Sx12WRZrEDw5OU3j6WE6BwIc751iOhyfnWm5Fj5KDNfZq3aBu/PhF8/+eUYU572tSmCYAlkW
      qBggBDZJJ27aKBRhiuUgd3gOYzMF++J30O4ox+tzMzA2w5qaYnxOiS1Fae7ccQ/pdBq9qZln
      f9VIhd+Bv7yEF0IO2ntHWC4H+HzoZbrcDhL2cj6xSkJSJZDkM3V3PNi2f419LcOc7BpjRWUe
      n9hYdS4OX5gm0XffJdHUgq2iHO+DD6Aj8Tc/P0jH4DSl+V68Thtfe3wrDpu65AbBXSNBXnmv
      E7tN5Ym7VpL7oQT+ywogHJwiHEsC4PXnXrGi16W4UQIIxxJ0Dk7R1DvFsbZBRidmiOpcudOf
      vcuf//dcOde5PySCC/4UZ+wSIEnYRRohCVJoqJg4pSS6UDEAh5Rirb2fR2zvY9R8mqO+bWyu
      zeZnLzcybbipK3AwOBnlz7/6ABImM//4HU7fuovm4RBDR96nAz9FbkE4EqG+0I4cHuSLn3mU
      wpJSkvv+X+x3fBNMjcSb/xW1YivayoeRHL6LTivZMbvim/XoI8QOHESy23HfcTv/+Nxh7tta
      Q1lBFs++28qm5SXUlGQvKQHEk2m+88JRvvLQBoKRBC+/18nvfWrzBcdd1lKvPxfvR7vp3xBm
      V/OCNPWM0dQ1Smv/NMFI8sybcNnePJ+d/lIu0bn2pVkjP/y+OP+g2aeBrKrEzyy0KrLAKSVJ
      IwgJBzKCrnQJ31cfZWv3Id4w8mjv99I9abA6exRnKEVW1gpa+iZYXZmL7HKy3p/iufcnCZoO
      6pYVcvcyQfORTsZD2fz28jh5qW5kVwOSM5vkiXeJvfssmrOH5LAdx3gbjp1/jKReeKMzw2GU
      3BxkpxO1sJBUXx8Aq6vyefNIN2uqCxmcCPGpO1bM4YIuDGndQFFkstx2VEUmfonK1DfNHmHj
      UzO8drSXA00DDE2EuWQPvlQHv4xXct2c394l3SC4aCxwyXY+GDQ7pRQpoWKXUsSEAwmBR4rj
      I8aQyAMEmmQiKRop3WRjfQkP3lrH8Y5R7tlUTWmeG/PUC7z71mt0aSsJ6XbGoyki9jLyUj38
      2vZyyuMnsN/ye8j+csx4gND3voFiH8F5/58Teq0Je3Ybzp1fQ/aVX2CmmUwS/MlPZ01OJPB/
      4QuMpOCHr56gY2gap03lz76yg1yfa8mtA5im4I2jPXQOTpM2TO7ZVHVRZeo5CSAw1s/prgEq
      6usRCYlkPEBFTe285wSndIP/9LcvMjQVn5f2rptLDY45/zXxIYFcSXWzjRUrU9iEzgTZpIXE
      7fYe9iTr8KkpsqQwg+kc/HKEu5Z7ibhr2HesnWy/D01VuXVNOS67SvdwgIbgC0SrP0VlRRnO
      xr/m2fR9rC1WuXNVPvZQJ2rZVmR/BWeLcwZ+/BM0Rx9aaTaxQ53YKyWcD/4FknpxoKEwDIxA
      ACUrC8lm47u7jzIxE+WWVWUcax+hMNfDl+5du+QEcDYwLxhJoCkKHtfF5zYnS8PhBBtv2URf
      ZzcDHQPUbNp6Lic4nU6TSCTm0vw54kmdoakYi74L96XcHuBsr1cwsclp4qYdBRPjTN0xRTIx
      zyycnVs9liQcUpJ7nIf5aXQnignLtVEaU7VsSE3R5y0jLrwUOVJMRL28O+RCGP1odhd/8Ngm
      HDaVv332CHc1lPHZ7bXs3r2cBo/CG/uP4g6W4C5xs3XbOiSbSiq3jhRANHrOdHnHDiK/ehFl
      rBdl/SqMlfcTTaSAi4tVAeBwQCoFqRROm0QsnmRVuY+TXWOc7p0gEoksKQGcnxKpSYBpEIlc
      fG5zslSRTQZ6+sDuorJ2OZHpccwC/7kL4HTOT3VfWU2hyLAkQpKu4NkYyKSEhiKZKJhIkkBH
      QZEENgnipoxAQpZMKt0J9ESEA4ltmEg86H6PI5EVpDSFT31+J3s6JgkEwkymnVR4JVLhKbKk
      AKonl+o8G5o3F6fdxvJlRRTk+qlYtQWp/Rc85Zsktv13yV92laJSHg++p566rkvw+N1r+PbT
      jfzFjxspyfOyqqoAj8ezpARwrVUh5uQCCSPN6MQ0+QV5GGkThI5ic6DOswskhOD7vzrC8wc6
      56W96zeEC2N7JNAkk7sbSpEG9rI3VEMhQSZMJ1HhxCcSxGSN1c4I0/Z8bllfy949x3GLKf64
      7gD/MLSN33EP8sehDcSTafyKg4DNzT2bq/nyrrWMB6P43Hbsmspo6wGcA29y2ncfjSfa0Arq
      KczNYmBsBq/TRtow+cqDG7DbbkznS6R0DjYNoGkK21aWoqnKTSmAOVkqKRrFRbODCtWuAAtT
      J0eSJL5w71refr+VkD6P33G5AfLlXj838D0T/MbsCu/xlnZ8cg66kMjVdUZkBQUDry2JKVRq
      3JPkBKYpMTRcfi/ViU4CYYHNrmC3n6BByuaEVoOzoIDVZbkMjQdJH/s3fFNdaPW7kCpvJzdw
      CHXLF7k1t4Za2zDCkSJ/1UpSaYPxQITivKwFLyN47vKkE0jHf8itM4OoKz+Jqt688UKLn7pz
      jdg1lcfWurhEDML1c2ZBGPigY597IAoUYXB2YKtIYvb/kuD8XR5UReZT2R2sUBXyXRIn1XzS
      aDilJDaRJGnAWMEdPLxtM6Hjh7ircJJ07T286Posn6kJopat40urp6j1BvBlOakryyF3uhGh
      y9hv+Rrp9lcRoWGUiltINz2DPngYz9hB8patQpIk7DaVohz3Dev8AOmTP0P2V2C77eukm/4d
      Mzp5w757vln8Z9U1IskyD91zF03N3+VIYhlX3mrkClwwSzPbmSVMBPJ5Lo7AhoEpQMXAlGQ0
      GQxDQpNMdCEjSQINg7Su8Np0HY/eewupqSSlwfd5Y6yQ8bhKQMD/saYHb3UBrw55+Y21CZRi
      F2pNDcn9L6H37sPx5X/H6fTz1ef/kMMVD2GaJp/JHiR2KE3k0C9xr8jGjI6jlm8DRcMcPYX9
      tq8hu66comqagreP99LaO8GG+mJuXV02b6UGzdAwttp7kVy5yN4iRHwa3DdnuMxlc4LnykLk
      BMuajVXTuxkLwVDay3XNCp0NAxIm0pk/VMnAPNM5FMmkRh0+F9PvkEzsUhpdqLgcNlRZxm9E
      Kcp28/t1XQxPxxjWs2lvH2JduZ8dU+9y/y0eNq0oJTA5zsOPfxZxejeNPVHu2LoOY/Qk6cPf
      QxgpJLsXc6wZpWwzov1XVNomKAsexozmYy8aRnVFMSbacdz+O0iygpxVglKyHsnhwxCC1r5J
      hiZC5HgdaB/yu4+0jzAyFeGxO1dw4NQALrt21Tr+13wJPQWk3vtHjNFTYKTQVjx8LmboZssJ
      vqkEIACpdBNbC8PEhJ3OiRSXFcGlZmvOe82Gjk+OIksmKWHDayZJySqqBGHhwStFUSQTBymC
      ws3muiJ+65HNdA9NU5AM0xcxaQt5cNv9FJcU8M2GLFoONaPe+3nK8jT8qUEGtHp+8FYXrw76
      KSuv4Na770Ut34redwDXw99GKV5H6vD3MIN9iHgA+61fQ/bXIEZeQbJpCFGECE+gllQhZ5Vc
      cCq797czPBkmlkxzuG2YtTVFFwSuHW0foarYz7IiPzPRJNFEmsqi+Vnal915qOVbkbOXoS1/
      4IIqzzebABbf0o+K5sS77jG+8sQ9OG3KbL1LzvjnAEKgol+ciXXWfz/z37SkYJdTmMgsT49h
      FzrZUgS3nOYu7RgPug7hlnS8JFgj99MyMM1Le4+TjE7z1JO38vVtBaRwEA7G2FaZjWu8lRX5
      gwx3NKKWbsa+6deJxFMU+D1UV5YwGQwxMjoGmgu1+i6S+/+W9Kmnsd/xTRy7/juyOx85pwq1
      ogFSAZKdM6Qjxbgf/zP09lcvugxt/ZM8vn0Fj9y+nEA4SSJ1YfL6bQ3lvHWkhx+9dpJjHSNs
      rC+e159BcvhQcqouKnF+s3HTjAE+jM3uZOvKct470YGEIIENhECSQGf2R5n17c9LTTwTk68w
      68ePG7lkixRDtix0ZKrUEXbaj9GYWsFD6mHeERvYEBtmMsfJpJziYfse3i3eRGDvX1Pnd1Pv
      qeOxHat4+vggA5NDTHpX80RPE4k9vTjv+xMiKYlVVQVsW1XG//jxXlLG7IyWtuN3jLkAABVj
      SURBVPbziNAQyAqyt3h2uq7ydpJv/8VsVGjDwyjDx7Bt2Yje+RJK2ZaLzr8wx0Nj6xBuhw1N
      lbBrH05yd/L7j21hbDpCca4Xm6bQPzbDq+93kZPl4MFb6nHab9qff964aa+AiE3xW3l7Kcke
      4/VQA/nmJIPkXtDhxWzOIV4pSkS4EIAmGRRIQYbMXHxSCm86iV+KM6Bmk8CFKuuEnFX8LC6o
      sk+wW6zBa0CWQ8Fc/Xke98j86MdHSQSL2HnnNopmdvP1L32dZ757FFtFPYMla8lv+184AZvT
      TXtnD+3tbTg0B5I2W19BkiQkX9m5c5EkCa3hiVlRICH7SjGr7yZ9+lcohatRqrZfdP5P7lzD
      28d6mQ7F+dK9DSiXmAVy2NRzbk8skeaX77TwxXsa6B+f4bm9rTx5T8P8/zA3GTelAIQwSe79
      n3g2fYX7a+J0/+IdOhIlLMtysTJrhr2daeKSDUPMztTkKAnsAkKmk5RQGCYbIUG+MsG0zUuF
      bYYt9naeDt/O9yMPUmMfYYU3zKFQMcVZCndsXUuJT6Wn5SCV0h6eyu9FbvgsUvB5JNXOYFhi
      OqzyOcdrvHFUQ3Hdyh3Ari21/OqgoCDbTU4yTXn+xeHGZ/mwKGR/BfZbfu+yx9s05VwW1rWU
      iw/Hk2S57BTmuHE5NN5rnp+tTW92bkoBYBqgJ5Hz6vjV8VM8XNDF87E68oJj3C72MmKuweHw
      0pU2mMTPtJxDrjlGuX2SE4lySvKzkRMxvlHazt/1bWNQW42RkHFJcR6qTdM/JvN0YDMFJBmY
      gX9/9zQygjIZBkQhTxRl4xpvRoSGcH7q7xnuibFi1VZsrfuoTqlMrb8LgOUVeRTleAiEE1QU
      +i67m/qNIN/nxqYp/PC1kwTCCbavu3kXrz4KkXiKjsEpqoqz8bkdF82e31yzQGdKI2o2OyI2
      hd72Eqf7JsivamBMLiTk9uGoXM3+wRRRM8VmWye13iQlrhSjKQ9j6VzuKRjEnVeON51Ctulo
      RQ30D89QLkLkZel8uXackso63htQWLO2jkQ0SDiW5n59FO/atdRV5jB4eoDKMge2zV9GLVpL
      TpaTlzoCTNVt5rCUR21ZLjlZTuyait2m4rAptPZNYNcUHDbtupcwLsfVyjTC7BNmbXUh2V4H
      W1aUUl2SPb9GnGEpzQIFIwm+++IxnHaNV9/vorrEf1Fi100pAJvNhlzUgOIvp6a2ht3tKsFI
      ghyvkyN9MZ7Y2UAwHKGNaozsGnrDdlKqh7uXF9A2HCE0OYxbC3EiuYyRUJJvfvEO6rdso33G
      SfnWRzgdcnOqc5jyXDvdwwFkA8pJQEkZ/uIqaG+n+pFfx16xCZhdpd60vBjdFHQOTpPnc/Hq
      odkLLkkS//DsIWyaymuHu6ks8pHlnntVi/O5FgHArAj8HgdO+8Jt7bSUBNDYMsSyIj87N1Xj
      9zg43jnKysoLizvctAKQJAnJ6cfmzmbLylK2r6tky4pSwvEklUU5DAYMRqejlOZlUZTvxxSC
      pqEQUdlDwPSQ53ez0TtCZ8TDzvgvqFz/CeoqS3jneC9ZHidum8zw4SOkTZlsW5xJj5dIIM7A
      yXZ2bN9MzuqGCzqdqsh0DU5TWeTn3i015GY5Odo+QiKlk+tzcf+2WopzPBxoGjiXlCGEIBBO
      0D0cINvrmNN+WPO9G8/1spQEIEmw71Q/ZflZ7DnRR0N1IYUfqnKx+JbOM5+8tZ53T/QzPBmm
      LD+LL923dnYjiukon7l7FaV5XqpLs6kxW1m1fgtCc9Eh6tD7G8ly20mkdI60jeDQdR7Jnub/
      us/gr772IP/V/go1lS7W3nMLr0edHGweJNHUTOAH/0r82HGEEFQW+TnZNcbIVITGlkFqS3Op
      LPTR3DPOyFSEg80D1JXnIsRspGLH0DT/8tIxOgan+fYzjehLIt7740NFoY+dG6t59f1O1tcW
      sqaq4KJjbpqUSPhopRGFgIPNA7T2TbJjwzLaBiZ5Zk8rv/ngBvYc66W1e4gab5yIrQhbsA3F
      V870VJKiqlLKC3y0D0xxz+CPueOznyMdcDN8+B3ertjOozs28v2Xj9PeM8bnclPsfOIewq++
      hnPTRuwrVtLWP8n+pgHW1xaysX529bZzaIp3T/SzpiqP9ZFXMEdPIbly+NeZe/j0zo3k+V08
      /U4LDdUFLL+OEjTn71gpBMSSKfrHZqguzsamqfM+5rgcN2M49E3rAl3mAGLvNRJ5+22UbD/L
      6srZWF9MttdJbWkuhdluTnWPMzgZ4ra1y+gOCLZlDVBfWUx36zQFPidNfVPctakGAUQ8pdS1
      /Qt6fyuuKsF7sRqOdEyyojKPvMEu+uOw+vb1OF120n192OvqyPO72FhfTEmeF0majdnLzZp9
      rTjdgxnsx7HzT0C1M9X8Fn2iHJ/HwdvHetixsQq79tE7z/ku0Hgwyj/tPoopBC83drKupvC6
      2rxelpILBAscC2SkYrS2tuPyZZFOGqQTUWTNjixJiyKAWGMj6dFR3DvuJvT0M9iXL0c+k5Um
      SVBWkEVelgvdMPnSvQ0gQVfYQ57qYCQts+HWtRzrnWRycoYcv4eo5OSuJ7+KVl2Na/1nqa8q
      461jveR4nTy+az2HG1uoi4whjh3F+8D9F2w4cSlSp48Q2/sSkff6UL0SVaUOxm01NLYM8egd
      Ky7yT6+V8wXw2qEu7lhTzvZ1lZhCMDIVmbcYoGvhZhPAnG4N8XiSysoCBgYGUNMyaUVmZV3W
      XJqcE8n2Djxndiyx1deTHhpGyb5wui/P72J4MsTodASAqVCcw6NhkiNjHD/poDQRZH1RPgHD
      5I61FUh2D2rp7GxPvg2+8cQt/Oj1k/zdGwFue2g7BR4D2/07r9r5RSpFZF8H3ttvxxhpItG4
      F//XfsgOm5sdG6vm7RpUFWdzpH2EPL+Lpu5xHthWN29tfxy5zjGASXtTC/nlpUxOBKisKmDf
      awepWLOemrI8DMPANM0F2UY0Ho/jukxn0wcGCD3/AlptLXpnF/6vPoV0id3chyYjvHGkh7L8
      LO5aV44EpA4eJH6qCce2rQwWLMPvsVPgv/T3zD6JDLSruBap7h5ijY04Vq3CvnIlwX/6J7J/
      73cRyQTB732f7K9/7SNfg0thGMYFvu7h9lFOdY2zbVUJqypvbJz+h21ZLK51n+A5DYKHuloY
      mIpRWlGKhhM9FSS/pAK7Ki/OIFgIjECQ9NAQtvo6ZJvtIyfOpHWDn73ZxNBkmOqSbB7fvvKS
      2VbnDzwv2c7IKKHnniPrkYeJ7nkXR8MahCmIvPkWkgTeRx4+t//vXLmaLTeKm3EQ/LGdBbpW
      hifD/OzNJtKGyQPbapkOxxGmYPu6Sn71XgeleV42LS+56HNX63SxxvcRySTu7XeS7O4mcfw4
      WY89BoYBgDSP18YSwMXckKT4jwO/fKeFX7t/HR6njb9/9hB1ZTnk+VwoioxdU0hf59y8fdVK
      Av/yA8xUimRrK77HH5t1CZdA57D4gMUfri8yhmli1xRsqoIkwe1ryjnVPc7f/Pwgw1MRNtbN
      JpJMh+IMToQwr/GBqXg85PzWV1Bzc/F/8QtoJRc/RSwWn4x3gToGp3h+XxsCuG11GbetKUcI
      SKZ17JqKLEscbR9h38l+vC4bDpvK53auwdB1NE1D6EnMYB+yrxxJm59CYB8VywW6GMsFukbq
      ynL5g09vwxQCu6bMxhhJXBAwtvdkH195cAMep43vvHCE6VAcn0tDJGZIvPNXyN4izNAQ9u1/
      hOy++XfSySQy3gWC2eQSh0297LRtttdJ59A044EI0VAAlzo7LtB796FW3Yn99j9AW/Uoesfr
      N9Jsi3nAEsA18Om7VtHW2cczP/8pj5YOIe39vxHxIHJWKcZ4K2ZsCmP01EWlxeeCGR4lPXCa
      0O7dxE+eZIE81Ywn412ga8Ht0Hi8fASprgatdifpzrdId7+Ftu4zKJFxUvu/jVK6CaXy2vbT
      vRJCCPTW3aS7DpBsb0erv4NkaxyRTOLacnFyvMXcsJ4A14icVYI5cRozNo05cRo5qxRJktHq
      d+G490/RVj0ybyVC0p1voNT/JnLNr6HQj+cTd5Noap6Xti0uxBLANaKUbUH2V5Dc/7+QfWWX
      LFUyX0iqA9Uvofc1oU8GCL2wG9eWzVf/oMVHJuOnQa+Xq009CtMk2dRMemwM19YtKL7LV4T4
      MGZ4lNTh74NpYDq3oZbUoVVWXnaQbk2DXowVCrHAXK3TRffvRx8ZwVZTS3T/fnKe+m3kedjh
      /npsuVHcjAKwXKAFItnSiueee3FuWI+an48+NrbYJllcgsWX6k2MEDAyFeZU9xgrKvOpKPCd
      Cz51NKwh/Mor2KqqMCYn0YqKFtdYi0tiPQHmwOh0mF++00xulovd+9voHQ2ee8+5dSuOdesw
      43H8v/ZlpMulcVrMO0IIRGwKkQxf9VjrCTAHWvsm2bqylM0rSnDYVE52jVFVPJt+KMkyjpUr
      YOXS20D644wQgvTJn2OMtSCMFKz9zLmMvkthPQHmwIqKPN5vHeZYx+iZujMXl92wuLGIeABj
      rBn7zj/Btv0/kz71zBWPn5sAhODkwf2MhqcZGpyku7OTtJk5S/bFuV4+fddKhidDPHhLLVXF
      H63coBACY6yFdOtuzHhggazMLCTFBmYakZhBhMeQbFeeMbzOaVDBTCCIkY4xPDhNbk0hrfuO
      Ub1xK5VF/gXNCU4kEvO2//BcmI/cV3OwEb3rbeTijYiet9B2fgtUx6LYMl8sBVuMkRMYzc+A
      6kTb8ttIV4jQvc4xgCAejTEzM8HkxChJj0pF7XIigQnMwtmNshdqHUBRlCUx5w3M2Y5Ezx6c
      255C9haRjA4jB3tQitcuii3zwWw5QmnR1wG0is2YZRsXMh9ApqislKKyUmpqk5iKjKkDIoUV
      tHjtKBXbSJ/8BUrlbZjjp5HXPbnYJmUcc5aqenZ1U4WF2ij744pasxNDc2GONWHf/kdIds9i
      m5RxWNOgi4gkSaiVt8E8hFFbXB/WNKhFRmMJwCKjsQRgkdFYArDIaCwBWGQ0lgAsMhpLABYZ
      jSUAi4zGEoBFRmMJwCKjsQRgkdFYArDIaCwBWGQ0lgAsMpo5CUCYOl3tp5mJxonFkkTDIfQM
      ygm2uPmZkwCGeztw5ZbgsusM9Q3RNzyJMr9pwBYWC8p1JsTMbpSd1GPEptuY9nkY6x2gsmEj
      MFsX1DRN0un0PJr6Qe3J+W73ejDObHe6FFhqtiyFzTzObpRtmlfe5XNOxXGjwXFOd/aRV1qK
      DSd6MkhBWeXibZR9A1kqBWlh6dhyMxbHnZOlbn8BmzafXwzqo9XFsbBYbKxZIIuMZvGfVRYL
      ykQwys/faiaZ1tm1pYaG6sLFNmlJYQngY87Te1r51B0ryM5y8E8vHKG6OBu306pUfRbLBfqY
      k0obeN02nDYNRZHRrzIrkmlYT4CPOQ9sq+WfXzyGIkusqSogy7Uw2zTdrFh7hF0nS2XqEa5u
      SyKpo5smboc27wWLzyfjpkEtbg4cdutnvhzWGMAio7EEYJHRWAKwyGgsAVhkNJYALDKaBZ0e
      0HV9Xts7G+I63+1eD6ZpLgk7wLLlUpztK1eb5V8wASzEXLAQAlmWF30TtrMshfnusywFW852
      tqVgy8d2HWAhF3I+CrK8dLxHy5aLudZ+smArwfPBYm25KUwTE1CWwI8pDANTllGWgPCXwhao
      Z5kvW5Rvfetb35q7OfOPqadoPLAf2eVHD4/TNTRNfl42CIPO1iaSODCik7T3T5Cfn8P8dQ9B
      f8sJOiaj5LhkmpvbsHv9OG0qE0M99I+H8LkUmprb8PiyGelrJxgHf5YbPRmlqbkVZ1Y24wNd
      TEUMsn1z2fhO0HH4IENphcLsLPo6O3D6slFlieHedsZmUrhUnabWLvy52fS2txDHTpbbQTIa
      pKm1A192DgNdrUQMFZ/n+vdXTkaD7D/QSHZBCcHRPgYno+Tl+DBSMZpONeHIymVyoJOJiIFL
      TnKytZvc/HyUM7aOzqTwqDqnWjrJyctHla//F4sGJzjw/lEKigrpbWshrCv4vS5SsRmaWjrw
      Zmcz2H2acFpFTs7Q1jNEbl4uEoK+ztMEkxKaHqGls3/pzgKlohNEhRu/W2M0EKfIFmcsaqKH
      RjCzKgiMDzI8GabclWQkMp8Rjjrj42Hy8/wIWaOmqoip6TCIFBNBgywlTltbPxVVZfS0d5DS
      vCSCE+jA+MAgpdXL6OvqIoaddGiKuWUvp5iaipOb6yMZGqe3f5yUYYKIEYxqiESA7t4Rapfl
      0nbqNHJOKaHxYUxgeHCE6qpCOlpOI7wFRCZHmUvm8OTwMJ68IjSSDE2GKSnMBWC4r5+KunoG
      ejuIpDWSoUl6B0dZWZNH78A0kCYYBSMaoKd/mBW1hfT2T87pqowNj5KTX4AZmyGluZmZngBg
      aGCEqmVFdLV3IBw5hKdGGRyboizfyehkhHQ8TFr1EA2M0z86QXWJd+kKwO4ppCzXRmd3L7Ks
      oGkyhgmYBopqQ5YlZEXBpsnoxnx6cSq1dZUM9HYRi8WZCBpUleUBJrKioKoKhgmaTUMYsxt3
      q5KEAEwBmqbCmQ29lTOvXz8aNbVldHZ2cuJEE/HoNGOTM2dsmQ1vBgnNpmGmdFRNRZbl2e+U
      ZDRNxdRNVFVFkedmS+GyGrRkkN7BUfRkktaTzSQBU0jYNBUJE0VWZscAkoJm08DQAYGsnLFL
      llE1Dcy5JfGX19Sih0YZnAhjJhMYxqzLKpBmz9n84JwlWUFVVYQ5m6yvKmdelxRUTVu6AjBS
      UYZHJ/D48vA5BN3TEnlKmLijiORoC46sfLJdCqfHTcp88+mXGowMDaPY3MRD00xOjDA8OkJ3
      fwCPPcVYCOpriznd1E55XQ36zDimM4tkMEB2cSEdTa2UVFVBLEja7mFuqScGQ4PDuFxett6x
      g1u2baPUL9MzlMQuBUgIJ+Ul2ZxsHqBu/UrCA53YsnKJBgLk5efQ3NxL9ep6YqN9KJ7sOc14
      RIOTTARj5OYXUZDrxZmdw3h3F3mlRbScOEVhaQ2yEULY3JTm+zh2qo+yilwCgTh2KUZacVBe
      kMPxk92Ulhdc/QuvQHBqjEDMJD8/F8lI4nR7GejuIq8wh+aWHqpqa4hPDaG6s8n3OenonyLX
      7yBhKKTD48hOH4XZblo6R5f2IDiZTGK33/j4dVPXMSQJ7cwgy9DTGEjYFmF6z0ylMDQN7cwg
      WE8mQdNQF2GAfuHvIUgkkjgcjhtux3zasqQFYGGx0CxZF8jC4kZgCcAio7EEYJHRWAKwyGgs
      AVhkNJYALDIaSwAWGY0lAIuM5v8HkghaA4RtY+UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ex_3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3RcV37n+Xmhcq5CIWeCIEASzEkiJYpSK7Ryu1tqubPddrfT2Mez3h3v
      zs4Zj3fO7O6cGXvsaa+77XbnqO6WROUsSiTFLCaQBEgi5wIq56oX9g+QICEUUgGS3C18z+E5
      xHv33nfrvfu7v9/9RUHXdZ0VrOBjCvGjnsAKVvBRYoUAVvCxhvxRT2AFhaHrOug6OiAIAoIg
      fNRT+o3ECgH8K4Gu6+SyWUITASLBIMlEnHwuB+gYDEasdjsenx+vvxST2fxRT/c3BsLKIfij
      h6oo9FzpZKCnCyWfn7OtbDBQVllN/eo1WG22D2mGv7lYIYCPELquE4uEuXD6FMl4bFF9JVmm
      qXUdNQ2rVsSjJWCFAD4i6LrO+OgI7adOoKpK0eNU1TXQ0rYRUZKWcXYfH6xogT4iBANjnD95
      bEmLH2Cor4dL504v06w+flghgI8AqWSC9vdOoGnasow33N/HUF/Psoz1ccMKAXzI0DWNzvPn
      rml4lg9XLraTSaeXdcyPA1YI4ENGJBQiGBhd9nHzuRx9Vy8v+7i/6VghgA8Ruq4z2NvNB6V3
      GB0cIJ9fXs7ym44VAvgQoSoKoYlAwXvJZIpUOs3Y+DgA8XiCiWBwWptwJDIn8eRyWULX+q9g
      YVixBH+ISCUT5LLZgvdGAwGyuRwlXi8//eVTbGpbjyAIvP7W27SsaSYWi+H1ehkZHeP8xUs8
      +uD9mIzGGePEwiHKKqs+6J/yG4MVDvAhIpmIz3rP5/UwODREKpXCZDQSjkRIp9PIsowoCKxe
      tQpFUYjG4jgdDpiFEcz1jBXMxIoh7ENEf3cXnefPFLyn6zq6riMIAqqqIorijP9PfioBVVOR
      JamgBdjjK2Hr7ttXrMMLxIoI9CFirjV5s8enLN/4LDf///p9UVz5bMuFFRHoQ4TRaJr299n2
      C5w6fQa1gEEsk8mSneW8MBcMJtPK7r8IrGwlywRd18nnsiQTCbLpNIIgYLbZsNnsSKLE+Fvv
      kYrHp205FrMZV6mfjs7LRGMxPG43I2NjmE0mqiorAIG+/n6qq6oYHQvgdjlxOp2oqkIkGkPX
      NHTAYDCwvrUFALvD+ZH8/l9XrBDAEqHrOulUkv6uq4wND07X8ggCVquNysoacmeugA7G9Q5y
      uck2iWSSRDKJoihIkkwqnaamqgqP28XA0DAGg8y61hZ6+vpxOR1EojGisRiKqjI8PEJFeTlm
      s4na6uqpR3p8JR/2K/i1xsoheAnQdZ3g+BiXzpwmk07N2dZusNC6fiMj4QCDvd0AjE8EEUUR
      j9tFKBzG4XAgAKIooigKCAKyLJNOp3nznYO0NjfjdjkxmczoukY+nyeby2OzWvC43ZgtVm65
      8+5p54YVzI0VAigSuq4TCQU5e/zIgv16HC43TWvXcfbYkWVzhLsZTa3raGhumTZHPa+g5VUk
      ixFWQitnYGWrKBJKPk/HuTOLcmqLRyOMDQ1RUVO37N6bFquN6vrGqb81RSV0uJ3Q4fOomRyW
      mlLKH96Nucwz71hKPk80EiaVTCBLMk63B6vd/htJPCsEUCTGhgdJxKJF9du04xbCE+Okkoll
      mYsgCLRs2IThmmVY13WiZ64y9sIRdHWS0yQ6+hlKpmn4w0cRTYaC41znap3nzxKPReGacCAb
      DFTW1rFqzVpkQ+G+v65YUYMWAV3XGRsaKqqvqihEwiE27Ni1bIvJnzFh142Ejl6k//svE7/Y
      R/TM1anFfx3pwQkyI8FZRoFELMr5k8eIRyNTix8mOUJ/11UuXzj/gTnyfVRY4QBFQFXVJbkc
      xMNhSvIm1vgb6QoPzHuAng2iKFKuO9COXaa/O0I+mkTPKaT7Axg8jkWNpesa3Zc7yGYys7YZ
      7u+lsrYOt9dX1Hz/NWKFAxQBTVXRNLXo/qmxIP3ff4Xo/mNsbNlEaUUVsDj52mKz0diyDndL
      A2qdF+vmVYiGyf1MtJhwbWpCkKZ/XmOFF9VhJJVMzDiE53N5IsGJOZ+p6zrBseWPZfgoscIB
      ioAoiYhi8XuH0WbF6HGgGURCiRi6JGOwWMkkE4gCcx42NV1naHiEYDBE8rU3yOfzk0a3sXN4
      JQst1VXsevxOzGVedEUleLgdLZsj4TMwXmug//ABBEHA5nDQvG4DXn8pAIqioKrzE3U2d8PO
      oaoqYyMjDA8OEItFURUVs8WCv7SMmro6bHZ70e/ow8KKGrQI6LrOqXcPEp4ozve+fvUaYqEY
      B99+k4lQcGo3NhqNVFVXs2XbNmw225TBzGgyYbM7uHL5MgcPHJhTTAGob2zk07/9Oby+EvSc
      QnfHRXp6r85oJ0oSm3ftxlviJ5/LceSt18lm5g6rbGpdh7+iiqOHDnLy2FHisVjBc4EkSTQ2
      rea2fXfSuHr1kjaMDxIrBFAkBnq66DhX2LNzLgiCQCSR4sypU7PaAhxOJ4997gusam5GEAQ0
      TePAa6/y+ssvLfg5Lrebr3ztD/B4vRx6/WVUpXD2CbfXx7bdt4MgcOns6TnVs6IoIVtsHHr7
      AMnEwjVY69o2cP+jj+L5V3h2+NdJlr8GKK+qKcrvZiIYmnPxA8RjMZ5+8mdEQiEA2s+c4c1X
      X1nUc6KRCD/9/ncJjI7Muvhh0jaRz+fIpFM43R6MJhOFgg00TedqVxevvPD8ohY/wIXz5/jW
      3/8dQwMDi+r3YWCFAIqEbDCwpm3jolSZssFIX//AgqzA4VCII4cOkk6neOm5/UVZjgNjYxx8
      68052+g6jI+OcuztN7l09j3y+TwmswXpWqItQRAwWSwMDA7R19e/6DlcRywa5Xv/9E1Gh4eL
      HuODwAoBFAlBEPCU+Fm/ZTsms2Xe9i6PB09pObHowo1nl9rP897x40QjkaLnebmjo6C79XVY
      bTYGerqmLNq6piHLBnbcvo8tt97Gtj17Mdtd9PQs3XKdTCR48kc/LMrN+4PCihaoCOi6Tl9P
      D+1nzxCamEDTVIwGmRKfd7oyUxCwWKxU1dVTVd/AscOHF2VIisVivHfi+JLmms1m0WdRsQqC
      QH3zGnoud0y7rqoqZosVu9NFMpnktZdeXDYD2OjIMIcPvMWd9963LOMtFSsEsEjk83mef/op
      Th07OkMscTid3P/Qw5SU+hEFEYvVis3hRDYYbgppXDh0XScUnN1yu1BYHS6qqirp77oypeo0
      Gk2sXt9GaUUVyXicnvgNIiitrES65lF67NDBRcv88+HIwYPs3LMHm+2jV5OuEMAioOs6Lz27
      nxNH3i14Px6L8fz+Z/ijP/+3BTUeJdd07guF3W4nHltc1uhCyGSzNLWuo27VajovtnPm5CmC
      oSAHD7+LKIq43R6cTgeNqxqpbWikoqZuKh55Lg7U3NpKOBhiPDA2457RZEJT1Um37vchmUzQ
      ceECW3fsnLqm6zqaqpLNZFBVBdlgwGQyI1yLh/6gsEIAi8DY6Agnjh6Zs00ykeCt117jtz77
      BKlkkhNHjzDQ14fJZKKusRGH07ngRd3UvIZL7e0kl+g0ZzIaSafTvLj/Gc6cPDHD4JWIT7p1
      dHd1sWffnVTU1AEQnJiY8/xhMpnJK3kamppIxGI43W4ioRClZeUEgxNIosTExHhBj9mOC+1s
      2b4DQRDIZbMM9fUwOjRIOpVE13REScTucFJVV09ZVTWS9MEs1RUCWAQ6L16cU6V4HVc6LjEe
      CPCj73yb8bEbu+OZUyexWK0LepbVauXW2/cSnBinp2tpBGB3OPjet77JQF/vnO0ymQyvv/Qi
      E4EAn/nc5xkZGprTOpxOJVEVhWwmg81up7yiEoDhoUFK/KX4/CUEZnGdmBgfR9d1kok4F947
      SSwSnnZf01QioSCRcIjx0VFaN26+pqJdXqwQwDzQdX0qNUk0HJ6/A5BJp3nmyZ9PW/zXx0ol
      k/hKSggFg7OeCUxmMw/+1qcpq6hgTes6erq6ip6/wWjk1PHj8y7+m3Hm1Em8JSUYTTMTb92M
      wf4Bcrks2UwGs9mCqqoEJybIZbPkczkGB/oxGAwFiSgWjZJOJTl/4hiJuYqD6DqBkSEQYP2W
      bcvOCVYI4CakUim6r1xGkmQaV6/GYDBw/N13OX3qBA6Hc8GhhrquMzI0OOv9hqbVbN6+g2OH
      D00Th0RRpKKqmnvuf4CmNWsQBIFN27bx9huvkS4y87PNZqOvp3vR/Q4feIu2zVvmbJO55jaR
      y+XI5XLEboqPKCT73wxd1+m7emXuxX8TxkeGGR8ZoayqelnPBB9LAtBUlWBwAlmWcXu8CIJA
      OBTiu9/6RyYCk7k7a2rruPPe+3hh/9NTYo/dsTAX4/LKKiYKHAyvQxAE9t19D1t37KCvp5fx
      wBiyLFNTV0dVTQ0m040ieA6nk72fuJuXn3t20b/TZrdjMMy9i8+GbDbL5UsXC94zmkzkslks
      FivpAq7cs12/GQaDgcDwwmMqdF1nqL+XsqrFe87OhY8VAei6TvvZM7z07H6ikQiCIFBeWcmn
      Hn+CM6dOTi1+gIH+Pt589ZVpMr9sMFC/ahW9c4gksixz/yOP8OoLz9N9daYDGkBD42RdL5fb
      w4bNc4coCoLA7r13MDYywumTJxb8W00mE4985nGe/PEPF9zn/YjHCsc8+EtLCQdDVFZXoSgK
      4VCIfD6P2Wwhk0lTVlFBMpFAUzXSqSQgzDjIWyyWRWeyjkcj5HP5ZT0LSH/1V3/1V8s22r9y
      XOno4Kff/y7p1OTupOs68ViMS+fPoyj5GRqPhlWryKQzZDMZBEFgy/YdPPDop+jv7SmoHTEY
      jTzymcdpXbcen99P+9mzMw7N/tJSvL4STh0/RueFC8RjUdweL8YCiW6vQxRF1qxdSy6XY3hw
      YF57gsfn47e/9BVcHjdHDx1c6OuZAZPZhAAz7B3ekhIcDgdmixWzxYLb68Vmd+DxeBBFEVk2
      UFtfP+mmbbFgMpuJRae/r+aWFszznDHeDwGBqrr6qdDP5cDHhgPous7Bt94seCBLJOKYzOZp
      xipRFNm1Zw97927j0pk3sZtztLSAIfkmn/9UA6dP5+i4MkYsZUI02Kmrb+CW22+n4lpm5rqG
      Rn73D/6IN199mZGhIQxGI0o+TygU4pUXnpt69omjR3jjlVd47POfp6l5zazzTyWTKPk8NruD
      TCaNpmkzSqp6vF42b9/BrbfdjtVmY3hw9nPIQiAKAg3Na+i4eGHa9YlAgGQigdvjxevzkbgW
      HZdOpdB1HUmSyGazaJqK0+Ui0DddEyRKEm2bNjHQfXVa6OW885HEZS8G+LEhAFVVZ1XJAfj8
      Jdy2706OHzmMTJwdbWZ82R+iZUbYWjO5i+vBi1xn2ptqYWMNaMjI9hJM3hoMnulJqWrq6vjS
      730NRVG4eP48T/7oBwV373gsyvNPPcXX//TPsFit6LpOJj25yK+rTX/+ox/Qc02kEgSBJ770
      FRxOB4l4HEmS8fn9eH0+pJuS5todDkRRXFCgSyHY7A72fuLuGQRw3TIcCYeIhEMF+17nkGOj
      ozO44JrWVhqaVjM22D9ruviC83E4l3X3h48RAYiiiG0Oy6rT6WLrllW0VXWSD3eBrqDNo3gR
      BJBQ0JOXyCQvkR15GkPJXkyl9yBIlmttBHRN47UXX5hTdAmMjXLk0EF2772DN156kXNnTqOq
      6lRQycjgjQPjdS1T26YH0TQNTVWRZHlq4UfCYcZGhvGXleMrKSEwNvuBfC5U19VSW1/Plu07
      ivZJev/iNxiN3P3JBzCazJRVVjGwUA2VIFBZW7fsVuGPFQFs3radl57dP+OeJAmsrYuQvPyf
      QS2+0JyuxMiNPkc+dBRz9eeQnZNFLoYGBgjNE28LcPH8ORRF4dDbB6aunT9zmlw2i8vjJjNy
      Y25VNTX09/Zw6MABopEwlVXV3H7XXUTDEX7wL/9MJp3GZDJRW99QFAGIosjWHTsRBIFPPvwI
      /b29TIwXrm6zUAiCwD0PPEh55aTBrK6pmWAgsKD0MCX+Msoql1cFCh+DQ7Cu63RcaOdXP/0J
      Vzs7yeVy0+ROkxEevi1HnW8IQc/PMdIioKZQIicnOYStmZ7uLi6ePz9vN03VCI4HZuj8k4kE
      jzz2GKlUElmWuW3fnVTX1vL9f/oWQwP9xKJRhgYG6O/tpbe7e0qbpaoqFqsVk8lIKrW4zBOt
      69dz+513IQgCRqORpjUtdFy4MKX7Xyyua7P23X3PTWngDbi8XsITE3NqhDwlftZt3rpiCS4G
      XZcv85PvfXeaHGx3ONi99w4MYo5a6zs4jcnlf7Cukh3Zj5aPYzavW1AXg9EwFYgyDQIMDw4S
      i0YxGAyUlpVz5uTJGV6ag/19MwLRzWYTjz72ON/91j+SSi7sd/rLyvjU409Mi+P1l5by+3/y
      b/jlT35MT1dh9e5sMFss3PPAg+y8dfe0HVwQBFweL1t3305/1xXGRobIZTKThUJEcTKxcG0d
      VfWNH1i+0994DvDqSy/MiELK5XLc/9D91NkOYlSLj3JaCLRUD0ajzOn2yLyH0db1bTQ2rab7
      6pVp131+PxfPnSMeixGPxei8eAGz2cx4YKZIsnXHDkLBIPl8HovFzIOPfJK6umpWNa+lp6uL
      VGpuImhsauILv/t7OJwzwz0tFgsbNm/B4XAQGB0lM09wviTLrN+wgcc+9wVa1q6bVXyRDQa8
      /lJ8pWUITMZAy7IBs2UyMk3XdUxm87JrgOBjwAGUXGGxJj34c2ymxe1kxcKcOcrmFh9Hz87e
      xmAwsnvvHfg8BvLxTvp7rpLJy5TXbqKypp7nn/7VVNtMJoOvpGRGjIHFYmHnLdvZs9lAsP8Q
      TksMS/67xC+CSzTxlUf8vHfBzZlOjVBoujKgsrqG3Xv30rZxE6Ikcu70e5w/e4axkZEpg+GG
      TZtZ27aBW267nS07dtLb1UXHxQtTYpiiKIiiiCRJ+Er8tG3axJq1a3G55zb2KUqens4OBvt6
      pql2k/EYwcAYfV1XMFks1Dc1U1PfiLCMGSZ+I7NC6LpOJpMhmUjQcaGdF/c/M+3+qiqVz9yZ
      mbNk0XJDxcT+I3VcvjLT/C8KsO9WPzvXZtCyk6ra619FkMykhVX8bH8PYyEAAbfXy5/827/g
      0IG3OHb4ELlcDrvdyl23umkuHwB1HlFHspOzfYKU2IooyXi8Pqw226RLSDDIT3/wPQb7C3PG
      hqYmHv/8F3G53VPXdF1nYjzAO2+8wcX281OGRph0m2has4Y77rqbqpqaGVwglUhw9viRBfsE
      +UrLadu2vWgXj/fjN44A8vkc777zDieOvEsykUA2GMjn81NF6CrK/Ty0sx+n9cOPSxVcu7g4
      2sp7x48RCgYRBIESn5Wdq0doqJj7cJlX4FSnnYS8nT133EVpeTmaphEJh4lHx7GmXsSUL+y7
      MxsM3lsx13wRQZwM7I/HY3z7H74xw4v1/aisruarf/jHUzaLzksXeebJn88Z72y2WLjvwYfY
      tuuWqbNFNpPh5KG3F50k2FdaxsYdu5bFM/Q3igB0Xee1F1/g7Tden6Fzr66t5fEvfAmb1k5+
      +McfzQQFA7Y1/wHBVD4ZGK4kUIa+iZ7uW/AQRv9dmKo+iyBMLiJdU0j3fQclUpyeXvbsxFL7
      OyBIPPerX3L08KEF9dv7ibu55/4HGOjr5Yf/8u0FhU3KBgOPf/4LrN+4CV3XOXfi2KSrcxFY
      1bKWhuaWJatFf22zQmiKSvhEB4M/f5PAK8fJRxJEwmGOHHynoMFpaGCAof4e1PDbH8Fsr0HP
      kwu+jSiKmM1G9PEnF7X4AXLjb5IPHpziaLnAq0UvfgAlfIzcxFukUynOnDq54H4n3n2XTDrN
      y889u+CYYSWf5+XnniURjxMJBQmMFJ8ipe/qlUVZkWfDr+UhWNd0hn9xgMjJzqlr4ROd5O9s
      njXlhq7rDF49SkNzcTvOckEJn0SveBQlcQUlerqIEXSyI88gu7eCmiE79uKS55QdfZYxyT2v
      VudmpFJJjhw6SN8i06WEgkHOnTmNy25j1mrfC4Ci5BkbHqS2sanoMeDXlANkx0JETnVOu5YP
      x4m/N7dWxyYOsJSXvhzQlShqZpjc+BtLGCOOEj5OLngQtIUv2lmhpokOvrrobhfOnS0qXcrV
      jg5CE0uzKgNF52a9GR84AVxn1cuJfCRRcB37THY8Xm/BPrIsU1O+rNMoGkr0NGriyvwN50A+
      egYlNodedZEosQyx2M2hWCe7UHCCbHrphLsc6VqWXQRSVZV4NEIwMEYiHiN3ja0ajEbsThe+
      0jJcbs+SjBrmyhIEo4yem+5o5Wtt5P6dDTz1s59Oi0iSJInde2/D7zkKy+TtsBQo0XZYotuF
      mupbkt/S++G0KrgcFqLx+YP+ARxO16Sj3Whx9QL0ZeDEy1FocNkIQNd1hvt76e++SmIWj8vx
      0RF6LndgszuoXdVEZW19UWmzZaeVikf2MLL/EHpOQRcFrC3VeLa34DXKOJxODr99gMDo6DUf
      +e20rmshdWF2Nn+lN4IoCjTWOOfULAyOJpgIZdjQ4kMUBRRVQ1E0TEaJRCqPwza/fnpS17/E
      BaCmgeWrNCnLAm0b1nDo8IX5GwO33HYbmXSaS7Qv+lkenw+DwbCoAoOFMFcQ0UKxLASQSae4
      dPY0EwusHpJMxLl09jSjQ4Os37wN8wJThVyHIAh4drZib64mdLmPSwMd6BYV43A//vJKLp4/
      x2B/H+lUGkmS0DQNURBAn/2Fj4cypDMKBlkkGMlyuTfCutVeMhmF+mon4WgGn8fM4GgSHZ2L
      V8OAjtkkc64zyPa2UgZHE1gtMn6vhVxew2KSKCsp8NsEA+gqSyICQZ7z9ywaus7eO/fROxCf
      1Qh2HY1NTdx62+0M9Pdx6MBbi96JW9e1Iag5IqGlZb1zzmNhXgiW7AuUSiZ4791DRGcJjJgL
      mVSK0aFBfP5STGbzrO10XUdVFFLJJKlk4lqBCAGD3UowE2UidC3HTDzO8WPHOH5kUkWnKArx
      eIyOC+14vR680uxal2NnxzCbZC5cCRNP5qivclJdbuO1w4OIosDoRJq2Zi+XusJksyqJVB6/
      18LQWJLyEiuReJZ0RuVU+wS6DoFgmg1rfAW5iWguR1czQPFlliRbPXp+YWlaFgRBxlb1IOs3
      72I8ECA4MTEjWksURTZs3sLjn/8iJrMZp9PJQF/fgly9r6O0rJxPPvIoAhAcLy5O4TpWr12P
      xWZb0hhL4gD5XI4zx95dUrnPXDbD2RNH2bZ7L2bL9CzLuq6TTiYZ7O1mfHSE7LVQwOsV1B0u
      N06XG1EU0TSNvKrSfnbmwVBVVd55600a7zUh6IXVpLu3VlDht3KpK8x4KI3PbWJsIs3qehcV
      fisO22R+z/ISK0NjSdrWeDjXGaS5wY3XaSKTU1FVHUGAUp8Vr9uEKM6SlFZ2ITu8KLFzRb83
      g2cnWi60bEQgGNwIBjdmIc7jj66nf804wUA/qQyMx2zY/ZtYt/lW6hoabrgzGwzc+9BDjI2O
      LCjrtdFo4q777kOWJCpqaum92lm0Lt/l8eL2lczfcB4UbQnWdX3eiiKLQWlFJRu275p6ubqu
      MzY8yOX2c3OWBBIEAafbQ0NzCz3d3TzziycLtjOZjPzRYxomcfG1fZcbBt9tGNzbSXX9TVH9
      BdmJrfl/Jzv6LPnQ3KkaFzwn761I1nqygVfQcyGmi2cCosmPsexBDN5dU1ZomPxOvd3d/Oqn
      P54zka/ZbMHj85HLZpBkmW07d1FfX8els4u3hYiSxNZbb8c9i8ZvMShaBIpFwnS2n11UUPNc
      SCbiuDxerHb75IF6oI+LZ96bEfhdCNlMmkw6hdFs5cL5wruq1WZj64YSJG3h7PqDgrHkdmT3
      VvTsOFpmsYHrAoLsJD/xNpK1ATXVy9JtGyKCaCYffBvUwoEzuppEiZ4FdCT76ikiEAQBt8fD
      hs2bEUWReCyCokwW7hNFEbvDwYbNWyjx+7nScYl0KkUykeDq5U7qVzVRVlExb3XKaTMVRdZt
      3jbpOr0M3oxFiUC6rjPQ3YW+DGqom9HfdZWSsnKi4RBX2s8tavxIKIjbJ+D1+QruRK3r23CU
      eskOdRTo/WFCRLI1IQgi5urfRssFUZMLtQkIGEvvRk12oyavgmhAdm9BiSzchaEgJPO1OcxH
      SBq5sZeQzOUY3Du44U6rYRHH2Ls5xc5GI+mkgUxORLQ24K3dh8VVzz9/439OG+l6pN4TX/oK
      JrOFq5fa593szBYrrRs3U1K2fAadoghAyeeZCBTW+AwODdPb38/alha8nhsus5qmEYvF0XQd
      RVEo9c+U30LBcbKZND2XO8kvYOd/P6KhIHfefQ9vvvbqFBEIgsCa1rV84r5PIssxsoJ0TQPz
      0UAwlSCaJtOkC7INa+OfkBn8Kfnw0Vn76DoE01bORTbRfbmKeMyAXSqlbW0TW1bvwpTqRc8V
      x9kE2YmuKyyYi+gK2dEXkZ1tCJIVLR8hO/QL8pH3QM8jAXbD5D8YRxi+SD67D7Nppt3HbLEi
      CAI1DY2UlJbR39NFYGSIzE3u1Jqmoeng85eyeu36ZRF7bkZRIlAsEmZwlmh+TdcYGQvgcjj4
      /k9/hiAIXOzoJBaPo+kaY4Fxzl+4SKm/BOv7Dr3oOkazmZH+PnS9OO7i8Xr5xAMPUl5ZhZLP
      X7Mz6AwPDmK2+bDLo6Aso/ZkkTD5P4HsXDv1tyAakV2bkSy1aLlxdCXFlH5fkMjh5IUrTXz7
      RAvHeoz0jcUYiaj0hQyc6BznUPsYJvd6am29iLMc8GeDYPRj8O1BjS/OjVpXksj2FhAkUt3/
      81r/Wb6XnkNLXsHtErncN2kzAbDbHdz/yCM4nC4EQcBgNOLzl1LTsIqKmloC4xNcaL9AR0cH
      fX39dHZ0cOTwIU6fOEEsGsVbUoLZYlmyGFQUAYQnxhkfLezJF0skiESiqJqK1WrBarGwZnXT
      tYILGrIsYzGb8bhdMwmASe6SmSev5FzQNI3qukZOnzzB+TOnSSYSRCMRRoaHOPUEE9UAACAA
      SURBVH/mDAazk0p38EMNhrkOQbJhrvk8gjzdNiAIAqKpDCkGeu9VJL0E85rfRfB/ku8cq+Sl
      cxpZpfCE0zmFsz1JFOsW1lXpkF+If4yA7NyIteEPUBMdqKnFJs/VEU1+8qFDqInO+ZsDDlOS
      ptZNWL3rsNntCILI1c4OguPjVFRVYTQaEQSBwNgoP/vBD3jvxHES8TiadoMz6bpOOp2ir6eH
      U8eOIhsMVC8xVUrRItBsKC0pobRkpngjyzL5fGHR52ak54lZnQ+5bJazp05y7PChGQYaRVF4
      5+gI9T4rfmfxRFYsDL7bEE2Ff7/af4z0c38G2jVXhFSel61f4MDZ/nn1DJqu8+KpceqrH2Tv
      6n3kJw6gJC6D9j6OIBqR7S0Y/PuQHWsRBAl9lkPvfFDi7ajJxbhy6/hNHXhu/Tf8y7e+PyWi
      9vf2EgmHeezzX2B4cIAf/su3pwp2zIVsNsuL+58hHArxwCOPFu1aUxQBFBOT6bkphG7OsZe4
      NWuaNmcd3nxe5XR3Jfds7gV9YX4vywHB6MdU/sCs97VQ143FDwSunODZ6OYFK9lUVeOpdzrZ
      ufYT2Bs3oKsptMwoo4EhTl0epXdCICt48Dg9tNQ62bRawW4REeSFZbye8bz0CIs15On5CF1n
      n5uhpLh86SJDAwP85HvfWdDivxlHDr6D2+Nhzx37ilo7RRGAxTp7WdBQOIzJZMJWwL1heGSU
      8rLSOf1/bA4nuWzxbq6SJBNPzP0Sg3EzpvKHyI48XfRzFgXBgKX2y1PZ4q5Dz2fIX3gaLXgV
      XZ3u1nAhXUE4tbgFNhJMcHkwxNbmClJ5A08dTvLy8QkS6eubwQQwwfNHrlDutfPEXeu4pa6R
      yXTji1GlikVnKDfqM62/giDy2osvLKqE7M1445WXWbu+DZ/fv+i+RRGAw+VGEMWCaspsLkcw
      FObQkaPsuWUnE8EQRqORZDKF1Wrh8tWrlPh8DA4Nc/edd8zIg1NVW080HEIr0tXW5fHidLoI
      js9ORA6nC2PZfWjZ0WUzJM0OCYN7C2qqFy0fxuDcgCDb0HWd7KG/JX/mWnimyYm86i7UsXZE
      ZyX9mYfRI4vjUJqu0zUYornay9/+4ijvdY7MuqxHQwm+8dQJhnbX8FC1HyG/cP980VyBrqbR
      i/BGraz0UVpmmZatrrK6mt4iinhcRy6b5ejhQzzw6KcW3beoeACD0YTTNVOkSSSSXOq8TDyR
      wOV0MhGc9A/KZrMoijKp0tJ0jCYjkViMzPvM4BarjdLKKlye4lVd1fUNrN+4cVZ2KIgibZs2
      IwgS5povIru3Ff2s+SGCZCIfPk52+Jdk+v6F5OX/gpoZAzWH0nVTFfdsDLnlAWxfeR7LY98l
      Y60u6omJTI4fvHKWU3Ms/utQVI2nDw9wfHwzCAuUoUUjpoqHEeTiSpzanWV8/nd/j12799Dc
      0sp9Dz5E4+rVC6q9NhfaiwzOKYoDiKJIdX3jDAc4u93GnbffBsCWjRvmHKN51aoZ12obm5Ak
      iYbmFmLhMKq6uJfiL6/A6y9li9tDb3cX7WenvxRRFNm26xZa168HJlWQlvqvkR0pJTf2Msvp
      XixIdmT3ZvLB6fn5tewY2aEnsTT8EaKrGjU+AoAuGohJJaQjeTwOCZd9dufAuTARTXH84sLD
      PhVV45enbGz59D0Yoq/NfS4SjZgrP4Ps2owSPYeWXnxSMdHWgN9bysOfeWzq2i9+/KNFj/N+
      RMNhEvF4wYRec6FoZ7iyyir6uq6QiC2Pb43ZaqWithYAb4mfxpZWrl5sXzBV251O1rRtRBRF
      TCYTv/XE56hraKT97Bli0SipVAqny0V5ZSWKokyl2hMEEWPJgwhUkBt/Cl1buo1Asrdirv7s
      rOKVkryCOnAUwWQHgxUMFg7kd/H0k/2kst14nRaaqrwIwuI8TWRJJBBOklcXR8ijoSQdiVvY
      UVdLduxFtPQQ0zYDQUKy1GIsfxDZuWFSb+/dNWm8W4RRUTB4kR0z00Qm5jmzLRSJxIdIAJIs
      07phE6fePbjkyBxBEGndsGkq2ZEgCNQ2NiEKAlc75i9N6vaVsG7TFsyWGwdvk8nELbfdzvZd
      t/D8M09z8ugRAuk0z/3ql3Rdvsxnv/glxGyW+KuvkTp2HC0eR7QZMKx1YlyfB2nx8q1oqcZU
      +klkzzYEQUKRZlEWJBKkD/0vkE2AZGJo/V/wk9ezpLOTTn/DE3EC4SQmg0wmt3Au2FDhJpsv
      7uzUORBi9/ptyM71qKle1GQPuppCkO1ItlVIlhoE0TTl/iDZmyc5wYLdMERMZfcVFJ0K5kMt
      AsWMsyR3aLevhDUbNtFx9vSS4n7rmlZjNJlJxuOYrVYkSUIURWoam3B7S+jrukxwPIByLcHV
      deQUBVGUyeRVTp04gdVqw+f3U15RMVXxJRIOc+70e1P9dF3n4vlz9LW3Y3/2ebIXb1hB1SDk
      +0Hpqsf91UfR9KuoyS50JT4jhFFHQBdkJFMpsr0Zg2cHkm3VNE9Jg2cX2bGXZwSuS0IpWvZa
      vS81y4FTl0lnq6a1UVQNv9vKRDRFXpl/g7GaDTx2x1q++9KZhb309yGazIIgIEgWZEcrsqN1
      Rhtd19E0DVWdjPOWyj+Lmougp+ZLMSmi2ncyEK4g1nsCi9VGRVUVTtekFdi3DG7NoijiLuLs
      uOSIsKraekRRovPcGRRl8f47smxgoPsqvVcmLYpWu4NVa1qnymE6PR7Wb91BNpshlUgQHB/n
      1PGj9Pb0zqo2s1itNDWvYcuOHZP1a9/HQXRdJ7r/WQyXCjvG5a70knprEM+XvwaChp4LoeXD
      1whBYzSR4tmOPoaTOhXeWh6t2ES1fWZ0kmD0Tfr6DD2JlhlFkCwYfLuRxVVkO86jxUcQfavI
      qK0wOjOMtNrv5L4dTfzk9fNz7uxWk4Hff3ALG5vKMRmK+6RW0+z9NE1naCLGsYtDXOgdJxBO
      ksurWEwy5e5NtLjMbPL34LMkZ1rYZSfd49UceHmI8fFvTW1EdoeDW/bcxp479tHQtJrD7ywt
      X1NNXV1RIZJLJgBBEKisqcXpctPZfpbQAoso2BxOspn0DKtyKhGn/b0TqKpCZe1koTVBEJBl
      A+fOnOHwgQMzKg6+H+lUivNnTtN+9gy19Q2YzZZpcqbLYsUzNPdBMX3iBK7HPo1ktyOY/Iim
      SR1zOJXi/3n9WXpCk+OdHrvIuZFh/suDj1Bim87eBUFAxIPUm0JIJjHd+lVEaxmpX34VPRvH
      fPdfI9fvYd2FIG91zKwAubbez77N9VhMBl44cpnB8RjqTa4BBlmkta6EJ+5cz9r6yflV+R30
      js4s4DcfGioKhxeG42l+9sYFDp7rI5mZucH1jcExytlv8fOJNTHub8thlhUE2YFka+Ril8rT
      L7+Kkp++CSXicV5/+SWSySR33XcfLre7YOHBhWLLjp1F9Vu2oHi708mWW/YQCQUZGegnNBEg
      m8lM2QoEQcBoMuEp8VNRXUssEubqpcIB2Lquc7n9PKUVVRiMRtKpFD/74fe50rE4V2Zd1+nr
      6UYQBCwWK7JBxu32cNcttyL/47fmVBNqiQRaNEq2/QKZc+cRHXZsd+7jWGiCnvfFsg5GIhzu
      7uLhdevRglfRQt2IzirE0hYyb/wn1J53AMhE/g8s9/9XyKfJq3Bi2MKVK10YZJFqv5PB8Uku
      IAB+t43TV0bZf6iTdDaP0SBR7rOzutpHtd+J22aiucZHZYkDWRKn1L63b6zjSPsg2iJEUqfV
      xJbmihnvrmckwt88eYSBwPyJayNpiV+d8dAZ8/Nnn9lJictGIh7ntdf+Zsbiv/kZx989TOv6
      Nu68516efvLnC57zzaiorGL9ho2MDg4wERglGY+Tz+UQRRGLzYbT7aGsshqbwzFDPb6saVEE
      QcDjK8HjK5lM25fLTkX+y7JhWiXGqx1zZx9QlDzB8QBOt4cffefb9HYXbyi5Ppf7Hn6Yzdu2
      I6QzjJhM6HOE4wlGI7H9z5J854YaM/HWAYIP3V+wfTSVIHf0H8md+h4oGRBl5NYH0UI3Iub0
      +CjpZ/+UnG8t/31gN+1vjAOTBjub2cBDu5uRRJHBQIxzXWMEIjf8orJ5lXgqRzCa5sv3beSu
      rY0FQy63NlfQ1ljK2a6FxdsKAuzbUk8kMZkt2+uwgCAwOB7j//3JYUZDCw931YHz3eP8t58d
      4d9/8Xa6r1whMs+urigK7WdOs/uOfZRXVDI6MsRizMxms5ntO3dw4uABsgWq1yQTcSbGRum5
      0klpRSWr1qzFdlPB8w+sQIZwLW7XaDJhNJmQDYYb4Y6aRt/VK/MGQLjcHl5/5RUuX7q05Plc
      5wat69fj8HrJdXWjzCEGGaqryVy4CDdpuPRsFl1TOe60o960w8qiyKfLJDwn/w6Ua0Sla2gT
      nUhl69ETo6BrGNo+A6LIC+OreHPUN+15eUXD57Rw345V/PytC7PK/IqqcaFnnHX1fko9tqlr
      2byCLIlIkkhzjY/TV0eJp+bPGlFb5mIgEOW5w5d5+0wfPpeFMo+dv/vFMbqGi1MJT0TTpHMK
      luz4VGXLuaAoCieOHCEUnEAUpQUrVEwmExs3bkBX8/Mb0nSdZDzG6NAANocTm32SCD6aCjGC
      QGB4iEx6blXj+HiQE0eXz1VByecZGxll09ZtmGpqSL/3HnqBOUhuN44H7idz6tSMe/6SEtx3
      7uNyIICia1gMBh7btIW90hDaNVFn2ljlbYjOSqT6PRh3fp3c0W/y8+BWgvmZKtJoMsNoMEn/
      2Ny2FUXViKay7Gmr4dC5fr7x1An2H+qkoz9IY6WbCp+DLc0VDE3ECUSSBW0JJoPEvTuaUFSN
      q0MhVE0nnVXoGgpjNMi8dGxpmesGAlH8ZoXQyPweo5OhlDF0XcdfVsYdd9/D6NAQuVxhDi1K
      EmtaW2lpacZkMCxqXpqqEhgdxuF0YbXZPxoCEAQBTVPnzCMkShInTpxYcvKk9yMSDlNeWUlF
      YyOi1YYSCKDnsqBPij2mljV4v/41zGtbSRx4e4aYZN+zG+/mzeRUlS3VNfzxnr3c2tAIyXGU
      K68xw6lMNqEOHEePDiI37kUdOM7B9FomMjM/nCyJRBKZBenyk5kcHruFf3j6BOPRFMlMnoFA
      lI7+ILdvrMPrtLCnrYbGCg/pXJ50VkHXdSwmA2vr/Xzt4a3cva2R1052MxG94RKtAwPjUWLJ
      pb13VdORDQak+OC8oa179t6BLMtkMmnWbdhI26ZN7NpzGzV1ddjsDixWCy63h+raWrbs2MH9
      j3wKt8NetBFW13UmAqOUVlR9dNmhK2vrGB8dIRiYKauKooiGtCy5Hwvh2LuHqbl8lfhzzyOY
      zXi//nUkl4uUyUjEZiVtNFIqy3i/+jsEv/kt9NQkl5B8PlLbt/HXr7zIWDyOWTawobKK8mQX
      eiqI6G9BC9xkV3A3Elr3hwyEf0reXImjox/fRJgtFTqXCojGTVVeuhcodmSyCm+c6iGnTCeW
      q0MhuobDtNaV0DUU5tilIfrHoiQzORRFI6eoXOwbZ+TpOJuayvG7rXQO3LA4V/jsDIwtrFrL
      fAikRHauWkNP5+znPZfbjQ6k0ymUfJ7j7x7mxNEjWCxW6hsb2Ln7Nmrrp2cQDAbGGBlcWm03
      JZ/nyqX2D7dAhq7rpJIJwhMTZNIpdE0jMDpCJp2a8v50ebysal3Hy88/x4VzhTM8CIKA0+VC
      lCRikfmLz70foijyVSSkoWF0IP7E4+y3mjgzNEg6n0cAbCYTO2rr+WxjE56xMXLdPcSefY6+
      2/fwX0Ud9VrI5u+5Q9w9+kvQVARnFYbWh8iOd3Fs3MmrsbX0RUXyioquT87bLGs0VpcyEkwQ
      jN0Qv6r9Tv7d53bzn3/wDmPh+YOC3HYztWUuzhU47P6vT9xKe0+AN9/rmZebGGUJt91ERYmD
      piov5V47/98zJ5Yl2YfJIPEfv7CLQy89RV8Bb0+D0YhBNpBOp2aV+w0GI7fcdht33nsfRqMR
      Xdc5ffRdgrPEpC8WHxoHSMSiXLnYXlDsEUWJ8uoaVrWsw2qzoSoKA32zy46CILC6pQVZkunp
      6qKmro7B/j6sNjuyQSabzRIOBtF1iBdgk5qqMta0ippcnqMWIz8YHSL/PsVDLJPh9csdHOvr
      4d/ddQ8bVjXROTLMhRIvnkyKcCpNid3Glswh0CYXmR4bIlG6i2/3buZIz8C1j3pjAeq6Tiov
      0N4zjiQKrK72srbej99l5db1NXidFlrr/QsigJbaEnatq+ZCT2CabcBlM/HLty/SM7IwnXpO
      UQlEUlSXunhkzxqOXxxarkw35BQVyWThs1/8Ei/uf4b+3h6MJhMWixWn00nXlcvzVq3M53O8
      8+YbJBMJHv7MY2iqSmiJGeVuxodyBpgYG+X0sXdnTZqr6zqJWIxIaIKSsgrS6RSH3npr1p19
      Mr5YJZFI4HK5cPt8ZLNZ+nt7MJvNDA8Nsa5tA/29PYV3FkGgdtcu+OS9/H0sTG4Oi0BOVTnZ
      38/6xkb+R2CY09EIBknmz++4kyfa1lKix1CHJg/LKYOfv+9ez8mr8+e81PVJI1N9hYfH963D
      aJz0+6nxOzl0rn9O9werSeYPHtnGpqYyZFFkaCKOgEBFyaRmY2h88c5lI8EEE9EUPpeVU50j
      i+5fCKIgsLnOzv4ff5f+3h6y2SyNTat57HOf5+SxY5PpFxeIsZERHA4HNquV0cGBZZkffAg1
      wuLRCCcPv7OgBFcAbq+P6sbV/MPf/vc5g2JEUYRryZeMBiPZbAZVVRElCZPJhM9XwuDA7HLi
      zj23cUgWuTC6sI+9obKKrolxkrkcToPE39dFsQ0eBsmE6KwEVw0/Gmjk+YuLOzxKosDvP7SV
      jv4JLvaO86V7N6Dr8M39JwtaXi0mmQ2rykhm8sSSWVrrSrh/12pMBomD5/r5yevni97BRVFg
      T1sNB8/NH4e8EFhMMrtcAQJ90wPnN27ZOs0/a6HweL08/KlP0d+1NA3VzfhARSBN0+hsP7fg
      xQ+TCa6EBVT/u+6BqqnqtPE1VSWdSjGYmvuQNJqIcym7cI/PjrFRfv+W3ZwaHOCO/EXM536E
      do1z6Ikxxlv+gDcPLC69CExqS3782jnSWQVF1Xjx6FX+41f2IgoCTx28xGgwga6D3WJkTa0P
      p83Ei0evTi2e/rEo57sD/Icv386rJ7qWtHA1TedcVwCjLBXtVXoz/G4bZGeKOMVWlgmHQlzp
      7MAkL1/B7A+UAGKRcFFlbIJjo0iiWJADiKJIw6om4rHotLC6xSKQzS7KXSCnqqwq8fPAujYy
      rx0jf5PYpGciHD56nFTWVNRc4qkcNvOkWjSvqPzlt15nOJggr6gYJJEKn4NP721l19pq/vwb
      r8xYPMMTcb61/xTjkaVnuogkMngdFrL5pRff2N5SSaUOb47cSP+4VNfnwOgYNdWVS53aFD5Q
      Aii2hpMgMFlAoQDnKC0rJxoJIxsM1NbXk81kcXk8BMZG8ZeWEpyYoKKykrGREVxuD+FwiFAB
      WbOkrAxmyW00G5RrXEcsWwvtNyq3a0Ynl2M2oPiwvt1tNUxE05y5MjqNMLOaSu9ohG88dZxQ
      LD1NZ38zLvQsvebWdXidFmKpLMoiA2tuhsNipNaWIxXMYrPZQQCny8WW7Tt4/aUXUYoMgVzM
      prUQfKA1worN8SMIAuUVFQXvXY/mslzLCibLMiUlJdTW1VPiL8XlcjEyNITT5aa2oQGHY2ba
      D1mW2bVh46LmJAoClU4XAIbWh5FX3w2ChGDzY9z37wkriyvy8X5c7J3g7NXRWT9wNq/yk9fP
      I0uFP9lyJIq9DqvZwN5NdUX3F4BSfYxXf/VjDh14i2QygcVi5cu//3XWbdhYVFWg63C6PXPW
      klgsPuAiecV/lA2bNxe8PjEeQGey3ObI8DDDQ4P09/VxueMSA329jI2MEotGGezv4+L5cwUT
      5Ta3trK2poaqAoH9s6GlrByvzYaua+ROfAfl6pugq+ipIOpo+5IyzenASDA+TZ1ZCNm8it1q
      xGSYLkasa/BT4l4aAU57Tk7hy/dupK2xdNF9BWBTvQtTZHqy3YnxAMfePYzVZsNeYFNaKMor
      Kymvri26/82QDYYPlgCs9uIyBwCsbdtIRWVVwXtjIyNEIxFy2exk/d/+PjLpNIP9/aRSSRRF
      IZfLMTYyQryA6vXW2+/AJE/68Cxk3UqCwOe2bgdAGz5L7sQ/3YiF1TXUMz/CmyveMrmYrDyS
      KHDH5npcNhPbWyr5nU9u4t9/8bapM8RywGyScVqN/Pkja9nZXLJg4pYlkftvWc2ndlYhFIgV
      Hh8bw2AwsKq5uah5ybJMU/MaahtXYTQWd966GfVNzR8sAfj8pUWxZrvDidVm4/4lpLybDW2b
      NlPf2IiqquxrWs0Da9fP2V4QBPatXoOu6wSTCZTRs1OGr6k2ukqLsfgC3ILAgiO5kukc7d0B
      ZEnkjx/dzgO3rMZqMlDhK35XfT8qLDkyL/1vmJ7+HH+o/R2/3zpBdYl9ss5aAUiiwKoqD3/x
      xC387v2bqautKXjYrayqQhAEdty6G8si68IBtK5fT1lFBWaLlTVts6e+WQg8vhJqG5s+WDtA
      MVVkBEGgsrYek9mMruucP3uW906dWnLeGICy8nLWbtjARGCc4cFBFEXB7XHTA8SsFqJGI/Fs
      BgFwW62U2h10TYyTVRR0wCBJPOpK8qnB7yNNy5ogEtv9f/HXb0uL8p+/jrX1fiwmeUEGqFWV
      HpqqvBy7NEQ6m8cgS7Q1lmIyyLx9tnfJ+ntRgL+oeJMN+XdvXJTNcM9/o0tsoWs4TPzaATmR
      z3JubBDNmEc35pEliUafjw2V1ThDId579zChiQlkWUYQBNZt3EgykcRutzM2Osrw4MCC3Vhq
      6xt47PNfwHdT3tnB3m66Oi4uusxSaUUVa9o2TKZn/6ANYYqicObYuwvWCLk8XuLRyJSeXxRF
      sqrOkUOHii7MDFDiLyWXyxGLFnYRMBgMfOLhR2hsa0NEwGO18j/efpN3uqb7swu6zp+aL3Fr
      5NCkGCSI6Os+i7znLzjbHeBvnzy6KB26x2Hmr37nDtp7Avzzc+/N2VZgUkNzsw/RzfdEUURd
      YoaONeUW/lL+GwzZ6Wcn446vYdr9p1N/h5JJ/vL5ZxicJeCltayc//MT96CmM7z6wvO0n50Z
      rG8wGjEYDKSSsytLBEFgXdsGHvr0ZwqmPEklE3SeOztrvYqbYTKbWdWydirUFj4EVwhRFPFX
      VJCMJ0jNkf9FFEVWr11PNjMZ/H4duq5TVlbO1ltupevKZXKLdI++znKTyQQTc8Qra5pG75XL
      bNu0hcrSUmRJ4ttH3iX5/ucJAtaGW7n9nq8zam7hl/E9PDlYx0vHuxgMxPE6LYTjmQWp65xW
      E1+8ZwNOmwmPw0Jn/wSx5Oy7WWOFm9FQctbzgiQKi84ldDOMssTXH95KeewEeuImG4sgYtj0
      20i+JmDym/ztgTfmtKJPJBPkNY0Gi4UX9z9TsI2mqmzZsZO6+noikfA013dJlqmorOK+hx5i
      3z33zioyGYxGyquq8frLUDX1RiHF61MXBFweL3VNq2nduBmPr2Sa6PSh+AJJkkRZVTVOt4d8
      PjdpudUnF73RZKa8qpr1W7dTUlbB2NDgjKqTVrudtRs3s37DRnL5HONjY/PmIhJFkcamJn7r
      ic/hcrs4/Pb8WQc0TSMRi7Fxy1YA3um+wkSB3WlbTR2yWM7//eIIF8YUoskciXSOQCTJRCRF
      qdeGxSSTLuDKAJMqVbNJxiBLHDzfz6snunnjZDcGWUIUBVRNm7aIjbLEnrZa9myo49il2c8a
      kihwa1vNvAE1hecED1WNsDf7LIKWR8+nJ886konM6geIND2MKMoYJYmhaIR/PnJ4XiIfjEbw
      hMKMzFF3WJYlfvvLv8O2nbtYt2EDJaWlaJqGxWLB7XFjs9nxlZRgNJlmT3cpCFisVsoqq6lv
      aqa6rgG3z4eSz1/LZK4jihI2u2PGOB+aN6ggCPjLK/CXV6Dk8+RzOQRRwGg0TR10dV2nsrae
      0Pg42k0HzXgyxS9/8mOGBwfJZjNYrFYMioLxGgvNpDPouo7BaMDj9VHb0EDruvVU1dQgiiJP
      /fxnC55nd9dVMpkMoihyf3MrnYHANMur3WRiZ00jf/fTE0QSM6tX6sBYKMFn9q6l1GPjVOcI
      I8E42byK1WygttRJIp3nvcsjpLPKtH4T0RSiILCjtYoqv4NgNMXAeAyb2UjbqrJ5NT2SJPLF
      ezdiMRl4/WT3/9/ee0ZHcp9nvr+q6q7OEWg0GjnHmcHkyJkhRVKimBUsirJkSatgy5bttb1r
      H+/6euXrlX28OvI9Xl975aBdB1mUJZkiJVmMM8MwOeeAQc5ooIFG51RV90PPYIBBA2iEIUFd
      Pp9mOlQVqv/vv974PIumVae/Jwp82DfCE4l/Qu3J7sKiuwbp4f/Ov/eN85OhMOEf/xibwchH
      N2zEbjKSzsMdjaVSdPsXLtClkqlsm7jJxPjY2HTnJ8Bgfz9XL13i5NEjfOzZT1FRVb1o4CsI
      ApFwiCvnzsxqkQlPTTEy0EfLxi0Ul5VPv/6uDMTo9Hp0OUbZBEGgqNjHui3bGO7vJRwOc/H8
      BYZHRnK2RaSSSda1beSDjz6G0WSaVoW/eO7srRrAOK0b2gguQcQ7k05z6thRzp8+TUbJ8EB5
      OZ16Hf5ImBKHg1/Zs4/hgRijE/P7rZoGJ64N8o2vPMxDW2pIKwqamm026/dP8ft/d2De3VPV
      NM7eHOYj+5o4eLab7qEgqqZxqWuUzQ0+jPL8bHF1pW4cZgNP7G7AZjZw8Ew3E+GFWxq8TiO/
      0JhgZ+I8DN1xQdTQIEdHpviHzvHpuCKeTvP3x4+wvbJqkbt4B0UlPibb51eR8ZVlU92D/f28
      +MMf5JTEHR8b49+e+y5f+LWv4likdpNMJLh89nTO/jNFUbh6/iwOl3tajE/z/wAAIABJREFU
      YPtdmwibD4IoUuQrwWJ38I9/+y0GFxhcz2QynD9zmlgsyic/81kSiQR/9//+5Sxfv6auHnGe
      6mkuqKrKG6+9SvzWrLAxFOKTn3yW7167wmg4zMvXrqCbXLy+EZiKMRGKc6NvnM6hSWpLXOxt
      q+THR9pJphbePVNphb/98RkGxkLThqJpcKFjlL0bKnjzfG9OAwpGEnz2T18gcevJIusl7GYD
      DquBRCpDNJ4GAaxGPaU2lZ21NnZU6NG9+ltwV9pS05l5c2B0TlCdUVU6xscQBWFRF0gvSXxw
      //0ErlzNGX/JsoH79j+ApmkcfvPQgnrQ42NjXDh9mr0feHDBp8Do0ACp5PzHUZQMg3091DVn
      OUrXnAFA1hV67Wf/zmB/fn3f7deuceTNNwiFQnNudFfHTZyu3KRPuWC12Wal1VLpNN85c5LB
      WwHawfYbVGq5C3QzIQgC//DS+Vk+++VuP9f68suG9Y5OzdLHgmy35t4NFbTVevm3N68xMhFB
      krITZ4qqTfMK3UYyrZBMK2hofOnxLdnKrppBuPw9dFf+BdqjiCMliDX70DV8iPT576GMXkGQ
      zQjbfplwt0RWVGM2XCYzdoORjkUye1vLK/E6nHzmi1/kB//yHQZmxAJ2h4OnP/EMxSUlpJJJ
      hvoX10vu7enmPk1b0ADymROOzGAUvMetEMvDmH+Ui+cWTgnejZPHjnH9yuWc79kcDkw5BPly
      Yd8DD9LUeqc4Vl5djWy2TP9fA4oKFy/i2MwyZ2/OzpIcOtdDMJJfzlonibjss6+50GGmtsTN
      A5ur+fNf/xDf+k+P8/lHNy56rHAsxd/8+DTBSAJ75Aa6c9+C2Dik46iBTtTIGLrynYiuCkRX
      BcZH/weWTZ+koSi3Hm9LsY9f33c/5gUYGQrMFr6wcxeiIOAp8vKlr/4GH/nEJ7HZ7RgMBswW
      C9cvX6ar4+Yt3YjFYwols/hnRHHxwunM4uq7Q4uyCC6cOcu1y5eW9J1UMokAOWsFTc0tbN+9
      Z9FjNjQ18+jTT9PU0kJ5ZRWtbW3s370HaWKSy1NBVEHALMtYzHqEhJ5YPLcvrpNEPrq3ec64
      ol4SMRt0JBZxgSC72H/rEzsZDkTIKCqVxQ6+8tRWyorsCIKAJIoIAvzPH54kFFvcqNIZlaHx
      MHstN1B6Ds96T0tF0FJR0hf/FS0WQIsGkFuepMpdwKXhQSZn6PY2FXn58u77KHe62FRazs1x
      P8EZ1DKiIFDnKcp+xuVGJ4pomsaJI4d56ccvEo/Hs9N84TCDA/2cO32KyYkJVE1blBqxZf0G
      6hubFnwCqKrK6ODCT5OKmjrszqxXsCZdoNHhpbUp34bH62Wwv39W1kYvyzS2tmIymdi55z7O
      njpJ8q7KoSRJbNy6jcee/khWN0Cno3ndOjJj44z+tz9i/fg4v1dYgPArX+ZaLMqLl87zmX1b
      eePYCD2js1O2Br3ER/c388SeBnpGg7xxrmf6vT3rKzAZ9Pzs+OITTRtqvbRWefjjLzxALJHG
      dCttOhNXuscYCuQ//nile4yRFjtuQYQZOsyCyYVovaOvJeizTx6P1coXdu7h28ePEk0mebCh
      kSfXb8BmyHZj1hcV8f985Bdo94/SOzGBKAjYjEaev3ieP3ntFYrtdn7ngQeZ6OjgZy++kHMI
      RtM0Lp47i81uz7KBzJPeNpnNtG3eQiIeIzgRIDw1RSIWQ1Gy3cEGowmb04nD6cJVUMhkIPe4
      pdVmx/duZ4EWw3IrvrX1DezYfR9vHTzA1FQQl9uNxWrlxR/8gOitIpxsMFBeWYnX50NVVNwF
      BdTU1xOLRnn74IFsKrasjLqGRpJHjqCMjyMCvvEAroFBWnaUslsO4tW/wPb7BI71urg+UUVK
      cOErtLFvQyXNlYWIosDnHmkjFElwqduPw2JkXXURvkIbb1/sXZC1zWzUs3dDBRc6RpgIJxCF
      7BOhvMiBzSxP74DXepc2b6FqGp1SE0W1H8jKM2kqyFYMu34VXf0HUcOjZDpeQ1dzP5qqcGZg
      gG8cfJ3wraDyrc4OHmpsmjYAyLLitRT7aCnOtq//y+mTXL1VIOuZCPDcqRNw5OiiE2DhUIjy
      yioG+/vmGIFeL7N1+3ZG+nu4dv70gqOykiRhttrQ6fVzMkEOdwHrNm9D0t1Z9mvSAFzu5WmE
      udxuNm/fTtuWLSiZDG8eeJ03D7w+6+bHYzEG+/tp27yFXXv3MTY6yg+f+y6D/X3TnxMEgeKS
      Eh6prGa651AATW5H6/sJXi0JKbCJ8HD1MA/X9WOs+DyyYz2CIJDOKLx4uJ0fvX09y7tPNsf/
      l8+fxCjrcNtMxJIZlBwDJ4KQpTv/H88dIRpPT2daRFHAaTGyo6WUp+5rpNhtJZZcOh19XJWR
      d38VLRVFneyZnm3QwsNk2l9GiwVIvPp/IYzd5Ifh+unFD9AfnOSla1f57LYddAbGefnaFW6O
      +UkrKuVOJ/fXN5C4iyK/p7eHogVaHWbCU1TEnv37OXHkCIHxcURRwOV24/UUokPNySF1NxRF
      IXyr3UU2GPCWlGEwZYm1nAWFc2YR1qQB1DY08OaB15f0JJANBqpqaqeHZMKhKY4fOZxz51FV
      lbcOHqS6to7vf+efGb2rpK9pGsODg7wQi/HJxx/F0DeAYV0xFJyeIz4tAChh0kPfQ2+pJIWF
      b37v2LwV20Qqw1AgjMmgo66ykIGxELFkBlkSUTWNWDKdc+pLVTUmwnFeOtHBsSsD/PKTW3BZ
      8wvsZ8IeOEPse38Bqazrljr5NygDpxC9rWix2/0/GukrLxBxfm7O98ciYf7lzCn+9ezpWfyo
      PRMB3u7qpMLlotBiJRiP4TSZ2YhAvg7tRGCcDZs2s75tI4lkklBwkusXzi652e02Uskko0OD
      rN+yDbcn92zDmswClVVUUlldvaTvNLW0ztKJHezvX5B7NBIO8dpL/z5n8c/E5OQk11xOPL//
      exi2OuYovcyEmvSjhK/zz69cXLBd4TZuV4H/5298mL/6j4/y7EPrsinLPIq3wUiCv/jhCaKJ
      1JIGcWRRo7b7b6cX/20oQ2fJXP/prNf0BjMtJeWzXhMFAX84zHNnTs1a/DPRNzmJ12bjTx5/
      im8+/THW+/Kf35VukSEIokgiFuXa+TPLXvy3kUomuHDy2Ly6FWvSAPR6PY888VTePeMut5sH
      H3lkVg/6Yk+P7CDN4kMsnTdvoigKanLxbsOe/pu8fHJxNuTbuNTl51zHCDpJ4CdH25c0g5tI
      ZThwtpsCe/599fvKEtgy88QNsgWpZBMggM6EvOc3+dTOfdxf14DdaKTAbOGJ1vV0jo8tOrxz
      dWSYRCaNx2qltLx8kU/fwe3PJhMJLp46vmq8sJlMhktnTs7pMYM1agAAZRUVPPOZX1q0iOUp
      KuLZz34eT5F31uu+klL0C+SpjUYjxjxmS1OpFKqqIkiWRT97+Ho0Lz2vmTh0tpsfH2lnOLD0
      OYJwLIXTasRuXnw6qqLIwacfnn/4R5CtxB/7a55f94f8QeFX+A+nx/mvP/0xDpORP/rw43zr
      mWdpKPKSyGMuQwPevtVGXl1bR5E3dz1hJnQ6HVt27ERVVa6twO2ZD6lkkmsXzs0JsNdkHeA2
      3AWFNK9bD2QlddLpFJqmodPpcLkL2L5rN0987OMUeb1zvmsymwlOTjA0kDsnvGvvPmTZsKAL
      BFBWUZ4V1RAgMzlXxmgaopGfXG/Ev0RStkg8Rb8/RHwJapAzkUxn+OpHttE7OjVvK/U6j8Jv
      bQzgSA+jDF8Ede65rhfu5muXRjntDzKRzBBPpwnG49zwj3Kku5NKVwEDwSCXhvObfDPp9Xyw
      qRlRFCkuKeXyxQvzDjUJgsCHHnuC5nXrGB8doevGyvUgciEei2J3OrHY7swVrGkDyEobmais
      rqKsvAy3202Jz0dtfR2bt22jsaU1qzSYg2VAEAR8pWVMBAK3eEKzD269Xs/23Xv44KOPIRsM
      C5I0CYJA1bZtvO0f4cRQmEJdCLuYq9QuIHse4pVrNibDS9u5Moq6rGzObaQzKjtby/ncI234
      CmxompadaLMa2VDj5ZnWDB8J/xWmgYMo/SfmjHMCBJxN/N+x9QTnMcKUonCqrxerQaZvMj/2
      6jKniwcbGoEsA3RVTS39vb1z9N3MZjOPPv0Rdt6XFVi/cenCstlE8kEyHqd0RjPfmswCwS1Z
      o2SCno52hvv7pv1BvU5ETacY6O5ksKcLm8NJTVMzhR7vtCGoqsrJY0d5++ABEvE4BR4P6zdu
      wuV2U1JWjqaqXL54AUEQaWxp5drlS3OMQBAEnHV1PDfQNz0Uc1Tv5rdaTTSZBkDJBtiCzobs
      +QBy0QdxWI8CS+vF1/Ieh58fw4EwJkMFD22t4cEt1dNHFDSV+A+/gBKf6fdrCBYP+g2fgHQc
      0buOf+tXCXV0LniORCbN+UWEBWeiaYZLKggC5ZWVfOLTn+HNA6/T09WJbDCwbkMb993/AGaL
      BUEQiEbCTIwvzm+USqXQz1AcWgqCkxPEIpFpwoa1aQCaRiQ0xeUzp4iE5+eq1zSNUHCSiyeP
      U1nXQHVDE5Ik0d3ZwUsvvjBNrBWPxxkaGGDP/vt5/aWfcfr4senJMpPJRGl5OclkcroUb3c4
      2LpjJ6dUhegMHsqptMCP/HX80cOfQ0z5QZAQjT4EXbY9YUNNEWfbl0YsazHKROIrC/YymdkT
      ULeXhZaKoYbmuoBaOoG++UlERynxdJqzx7+T13miqSQ+u53heUiOb8Oo0/FwY1ZnWNM0wqHQ
      9FjkzIm+I2+9ycREgEcefxKny0UwML5owUzTNI6dPE1zYz16vUw6k8ZoMBCNxbDbbIRCYYq9
      C5AxaBoB/+jaNoBoNMLFUydyRu25kB1nvIEA1DS10NXRMYdVrr+nh0OvvsKxt9+aXRiLxxkd
      Hubjn/pFiktKQdOyDVtGI0cPvDbnXImMAno3OqNnznv3bajk+4eu5u3SiILAA5uq+PdjN1fE
      eOawzhPM602INh9KeHYGS7S4EYxZkq9QIkEsnZ8BqprGM5u28u3jRwjPE6SKgsAXd+2h+Nb8
      biwW47v/8L/p6+mZ89lMOs2lc+cIjI3xmS98iang4u5VMpkiMDFBR1f3tKC6KIqk0mlcDgdn
      zl/gqcc+jNUyf9Ji5lz4mssCKYpC++WLeS/+29A0je6OdibG/DmHp3V6PRfP5Va0T6fTXDx3
      loLCQjxeL8ZbrHP31dQizYgvBEFgV1U1+nmYzTxOM88+tDDNykzs31jJ47saMMrL34ckUaCm
      xAloaKqKlgyjBvtRJ3vQYpPIO76MYJoxRCJbkHd8BeTsApElCUnIfxms85Xwp088TbO3eA5N
      SpHVxu8++EE+fKvXXtM0Dr7ycs7FPxNDAwO8+rOfEs+jYhyJRrl/7x6KvV4qysooKy2hxFdM
      VUU5er2eirLSWb9ZLiTidwqNa+4JMDHmz6vknQuaqtLdfp2W9Ru5cOY0vd1ZOhZZltm+axdv
      HTo473eDk5NZevUZN29XVTVf2bOXly+dJBUP0FYgs0XuoefSFZRMHEHUIemM6GQbJmsxJmsp
      H95WQTCS4EdvX5/Tzz8TO1vL+OUntyDrJZorCzmzRNfpNsqLHFR5zKQ7DpK59lOU0UtoiVC2
      z0dnRHSUIlXuQdCbESyF6Kr3IXpbp10Eh8lEqdPJzTwEzgssFoptNsRYlG+sb+PmzXY6x8dI
      SxJlJaW0bmjD6HRxuzoXmprKu639ysWLuGyLDxoVFmTbZNzzpMdrq6sWPYai3An215QBaJrG
      8EDfon7gQpianARN5dP/4YtcvXSR0NQUVTW1lJSVcfLYsXmrwza7fbqQpiopgv6L+PvexjV8
      lsfjPSipEAxrLLROBVGHwVRIk6uOT20o51Cni+GIa5Z7U+qx8eTuRh7cUj3d3fnUfY1c7Bwl
      vUQyWlEQeLTZgPbqfybRe2RuhieTQE0EUUevIFi9GHb9GmJRC8KMHV8UBJ5ct55vHjqw6Pme
      rKlDPHEMursRE3Eagcbbb3Z2wMAAVFVB20aw2vCPjBCP5cdYnUomCQQCuF3501UuFzNnBtaU
      AaiKwtRE/vO7OY+hKkxNTuArr8TtcpKORRju7SIWCtLY1MSJY0fnfEeSJDZt2UpksoOB688z
      2nOARNRP/oSFWWhqhkR0hER0BCvwWIFEotCL5tyPt+bDVJZV4yuwopOkWS0M62q8fGBLNa+c
      XDgTczd2lyts7/0GSnjxirYWGSVx4I+RI37k7V9EEyRO9/XydlcHNoOR9b4SLi3Qhr7VZufJ
      wQEIL1DoSCbgxnUYGoJ9+0kkEouyd8y6xnk2vkQyydj4OOFwBG+RB0VRiUSjlPiKMcgymUwm
      Ow+uaVy70U5JcTFOhx1VVadJuWbCZLpTPV9TBpBOp0nnGZAthFgkQsfVS/TPEGaLx6I4HVZa
      12/g+tUr060SsiyzodVFfOjvOHL62Kw++ZVCRMGsDcHkc8Qvvkg48SSFps+it88eqZREgY/v
      b6F3JMj1vsXllQRge42VX+Lv0eWx+Kehpkmd+BtEWzEXbJv4+msvT7M7VLkL+HjbJl5vvz5r
      wMUqG/hwSSmfmghgWGjxz0Q4BIcOYKutR5KkvJoaBUHA4y1GTecIrjWNy1evkU5nSCSTnDpz
      lq2bNzEwNIQoipy/eIkNra3Y7TbQYGBoiI6uLqKxGLt3bMdomF0pt8yIEd9RlcjFEI/FOHbw
      tVk+2nLgKS4hGBjLqS/Q1LaJVDrDQF8fyUg/ytRrkLy6qgt/IehkGxUtn6Cm7XPoDY5Z7wUj
      Cf714GUOneuZRZkyEw6LgUd31vOI8BLShX9c1jUI9hL+T8kXeWnGfLIkivzp409R4XJzc8zP
      ZCyG3Wik3u3GdfgtGF56jJK0O/jrq1cZy6N4ZrXZ+OwXv8TV82fmMHulUikmJoNEYzEikQiB
      yUmKCguZmJyk2OvFPzZGgdtNQ10tXT1ZcUWDLGMwGHA6siOYM7Fj/wfW5kSYTqdD0kkrNoDb
      Inq5kEmnqa6tRYyfoKP/25BaHU3cfJFJhek6/22GO16i9b4/oLB8z52A1GLgC3vcfCD9U051
      R7ip1RI0VCGIAoVCgBZHhJ37H8bjshH/7r8vu4SmhYbw6U4ANdOv6UQRq8GA3WhkS/kM+vGe
      7mUtfgA5NMXemhp+dHZxPbDKykp6b97AYDCSTMyO02RZptg7P1V7Q13t9L/ra2vm/RyA1e7A
      NoNa5Z4ZgKZl03Kqqmb/jYYoiAi38ra5ChU6vR6z1baiRqjbBFxTkxNzbqQgCOilFGde/nXG
      B44s+xyrgXhkiNOvfJXqDb9E/ZZfQ9IZ0IK9JH70ZYrDIzwhAYKIYc/vgGwheejPYSyJ8Mq/
      kVn3UbTo4q7SQtgr9HO0aCcd4+PoNI3H7E48/YNkFBWpoCBbVdc06Fi+IJ0AbHI6Gdy1m1PH
      j+WMBwRBYNPWbbRtbCPgH6GsrJrO60vXWssXlbV194YZTtM0ErEYU8FJghPjRMNhErEYmUwa
      VVHR0JBECUmnw2A0YrHZsTuduAoKMVtt0xfl9ZUSnGeeMx8YzeYs+1wmTfuVS2gzbrrJEKL9
      2H8mGV3ezPGqQ1PpvvAPRCa72HD/19FuvIw2s2ilqaQu/iuCbAUluylo4SHSV55nqQH63bDE
      /fzx0w9w/eDbKK++TtHEJAFeBJ0O884duD77S0gGA0yszNCk0BSPPfVRSssrOHb4LcbHxrIq
      P5KEu6CQHXv2sGX7DnQ6HdUNTYiiSMA/SnCF580Fh8uNt3R2e/aKDSCdSjE6PMhwXy+hYHBB
      eguFDKSSxGNRghMBBntBEESsdjvekjJKK6vwlpbR192RV1EkF8qqatDp9ZRX1WAymxkZHEDJ
      ZBDVYUaufxslvXTezHuNsb63uHL4v9Msz+1qRUkjGGcW9lbAfjsDWiYOp47j+cHzMNNdzGSI
      HT6COhXC89WvIKy0LTmVQlIVbLd8cZ1OR6HHw8OPPkZ1bVboYmxkmIGeLmLRCAajCbvTRWgq
      uODs71Ih6XQ0bdg4R7dgWUFwtlEtSX93J/3dnUuSQV0IgihSUlaB2Wql88a1Jd8AV6GHTTt2
      Tw893/7Tgv6LnHn5q6STa2/xz0R54QYqhm4gzFBo1G/6RfTrPk7y4NdRQwPoqvaCqtx6CqwA
      BjvhK61kAvNvNIVf+iLmoT5Ywe+riSJX6hv53vP/NssFcrkL+NXf+m2G+3vpbr8+53s6nR5F
      yayoJnQboiTRunEL3tKyOa73kg1AVRWG+vrouHZ51SZ27oYoSRhNJuLRaN43wOFys37r9qzo
      wYw/MhS4wamf/Qqp+Oo/UlcdGlS7W6jQjGipCLrK3cjbv4xgsKIpKUjHwWAjfeF7JA/9ycpO
      pfcQPFIM2vwdldZ9e3EXOiGy9GGd6fMYDHxrYJD+kbkTdXv27UeWmPeJ5vGVMDk+tqINVtLp
      aG7bhG8eXbEluUCJeJxrF84xPrq8rEC+UBWFaDh8q9lp4ayQKIr4yiuobWqdQ32djE9w/sDv
      vjcWP4AA3cHr2PZ9jZKaR0B35+8RJBkkGSA7uigZpuOCZZ3K0QjawhkwTRDA5V6RAeB0MXb5
      Ss63ers6qJ+RwZl7ARpb9+zn6oUzhPKcQ5gJu9NJ04ZN0ynPXMjLADRNIzQ5ycUzJ0jkWdpe
      KQRBQFUURAkKvT40TSUWiZDJZDnfDQYDzgIPvrJy7E7XnEebqma4evjrRIP5yzOtCWgqV499
      A0dRG1bXHWIATdNQp6ZQQmFEcwFSycbsgMtyIMkYd/8SwsFvoy1AHCBXV0NtPfQvXwCQunqK
      u7ro6eqa85Y9R9PiTKSSSWwOB9v27Geov5fejpt5NEkKWKxWKusaKC7LrVU2E3kZwPjoCJdO
      n1iRRNGyIAioqkrAP0LThk0Ul5WhKmp2blunX1BvdujmTxjpntvO/F5AJhXm0lt/yPbH/g5J
      Z0SNxwm98CKRN95AjUQRTSaMDS5kWUbQlu6GpqPFhP/y+xga6klcuJjzM7qiIsy7d4PZBN5i
      GF2cFOBuqAUFRNxuduzZy9Dg4Kz0dklZGVt37qK/a34Sgduji6IkUVZVQ2llNaHgJOOjI0TD
      IeKxGKqqIooiBpMJu8NJgceL3TV3Q5wPi8YAAf8oF04dXxWRupVAEASaN26mtKJq0c8mon6O
      PP9JUvHlp1PXApp3/x6VLc8SfO5fCf/0p3N8ZXN9AkNBF2j5/zZi8XoSk1uJvnUG95e/RKqr
      m8jBgzAjQNV5vRT+5m8g11Rnzzk5Aa+9CktoUU+KIi8Gp7h6q4hms9spKSsjnU4j63R4iwqx
      WG2EpoKzUtXT1ymKbL1vPw7X8kjS8sWCBhAKBjl37DCp1OpO6C8XoijStn0XBUXeeS1c0zSu
      HP46/de+/w5f3epDJ9vY8/A/MPFH30TNMYUlGGXcH2tC7X0e0ou7ppqxBsX0IVL9k6SHhjHU
      1mJobUHndpMeHERNJJDLyzFt3YI4k01b02DMD2+9CXnQj2sWKz/2+zlxl9uzedt2HnvqaU68
      eXC658vpchMNh0nPYJQTJYnmDZvwlVesSAo1H8xrAOl0mtOH3yCyyPjbOw3ZYGD73gemFT7u
      RmSyiyPPP4O6ggBxLaHEvg/XT6Zm5+pvQxDw/O5/Qi6WSJ74G5TB05C6K60p6sBQSHLUTbxL
      Rkvm2G3tduxPP4Xt4YcQFqCSIRqBc2ehtwdy1QdkGSoqUda38fVv/Nmc1nOTycTv/Jc/4OTb
      b5C+talWFZZSqlmY8JmI9AwhZ8DjKMDSUo24BM6j5WLeGKDj6uU1t/ghGxhdvXCWzTv35GSD
      6L74jz83ix9gdOo4NkMDuhwbvKDXIzmdSL5qTE/8BWqwF2XoAvEjLyPoJQxt2xEsFQR/8AaJ
      a51A7oY/NRQi+J1/QZmYwPnJZxB0c5dFOp1mdGKCQUEkpJORI1FcgMtqxVNWhsFXguAtBpsN
      NA1ZlucYgF6WMZhMVNU30HPzBgajEW9TPUa9iZJUBkWKgwQkVJRr/Qjb6nP+xquJnAYwGRhf
      krj1O42JMT9D/b2UVs6mT0zFJxnufPlduqp7A0VIMVUWpqB9rhK8oaUFfVkZAIKkQyqoJXzw
      HKE3IiCKFDTUkbraQ+JqHnMGqkr45ZeRq6ow79k97XooisLlCxc48uYbjAwNkrkrFhRFEVdv
      L9t37WZ7RSWyICAKAtt27ebAyy/N+uzWHTvpuXmDgZ4u0uk0mXSasyePUlJeSZWxgFnOTjID
      aQUM77ABqKrKzStzaULWGjpvXMPjK0GW77S6Dt78CUpmYVG49yJCtSlKXVtInruElk4j6HQY
      Wlpwf+mLc1yWVMetrIqqEj1yjOSN+QXq5iCjEHrhRUxbtiCYjEQiYX76/PNcOp97ljp7GpXA
      2Bgv/fhFLl+4wEef+SRFxcXc/9DDyLLMiaNHMBgMbNq6DbfLMYv0SiPbStPbeZOEM0gjrukh
      dcFmghXMSueLOWcI+EeZWoKq4ruFZDzOUG8PVfXZoTxNUxnpfv1dvqp7g1hqFPnZh3E+/TEy
      4+NILidyZWVOf93+1JNkRkcRjCYkt2vBPH8upIeGSPX2opSX8f3v/DMdSzCg/t4evvO/v82n
      v/BFrFYrXR03SadSNDa30LJuHeeOz9+B658ax9dQikuVEWQdYkXhPQ+A4S4D0DSNvs7lt7++
      0+jv7qK8uhZJpyMWGiA0fm8o9d51aCr+/jdp2PbryNVVC37U2NJC8Z/9GYIoEPhf31r6uVSV
      ZFcXhy5dWNLiv43A+Bg/+v73qKis4sbVbFvzsbffwqDXISzQKKlpGhOZCJ51bUu/5hVgloMV
      j0XnlZZZi0jEY0wGslNNwdHzP1fB790YHziOlufUmmiQEfR6tMTy7kdf+w3OnFxmlRno6+7m
      8oXzs15L55FKT6dWp6lyKZhlAP7hoTXv+9+NkVvkt4GhBYhrfw6slNULAAAV2klEQVQQClwj
      cxevP5qW7dQMjENfHwz0Q3ByOmUqLZNh4cbAwIoLn4qiUF5ZhcVqZdvOXazbuGnR71isi9Oi
      rDZmuUBjizAlr0WM+0dQ1Qzhifx5+d+L0NQMkWA3Lu8tFyGThvb2LAtD6HadQACdDgoKYN16
      DM3NRA7Mz4WU8zw6Hf15SJYuhlg0yjOf+Sy+khKMJhPJRJy+zpvz0tLo9HqKShbXX15tTD8B
      lEyGcB7UdGsN6VSKYGCERHR5ZFrvJUQmb6Uz43E4dBCOH822KUwXybSsYYyOwKEDGBMxdJ65
      FI4LIV5WysQqEPYqisLY6Cgmc7Y93WA00bi+DV2OwF2SdDS0bsBseeefANMGEA5NvfPNbquE
      YGCYdHJhjdmfB8TDg1mX5+jhxTs0VRWprwfHuuaFq7szILmcZB7YP0+5bOmIzKBRyc5ql7Bl
      916KS8uRDQYknQ6L1UZdSysFnqIlcQitFqZdoNhKer7fZQTH+9FyiD78vCEZD2RZGvp68/6O
      2SijPPwgUwcOoS0w3ii6nLi//CVipqUL7817TOlOiKlpGlOTE4wM9BMKTpJJp1FVlWg4zI1L
      F7h55TIGkxFXQSHFpeW4PQswPK8ipg0gkXjvFpCiUyvLXI2MZ5VnCp169Po7P1o8oaDXi4xP
      pikulOd8LxjOIAChqILdIuGw6RgZT1FcKDPkT1JUIKOTZv+I6YxKKKJQ4MxvV56JTCKU9fmX
      kKgQFAVbYz3yps1MPf88yY7OWSOOgsmEqW0Djo9/DF1pKfbREURRXBVvwOlyoWkawYkAndev
      5qY/v3V7VFUhHo0Sj0YZ6uvF7nRR37oeV8G9rQdMG8BiY2fpTIZLV65SXlqK02FfUH/rNuLx
      BFeuX6e1qRHTjJ0lnU7n/H4ymZwmMQpOTeGw27OUKpq24GBDIr5EXaK7cOZKGE2D2goTXf1x
      WussXL4ZpcCpxyALTIUz9I8kkXUCE1MZPG49FpOEXi9w/lqEh3Y5GRhNcflmFJNRJBTJkEpr
      ZDIal29Gaag2MzCSpKrUSM9QgtIiw7IMQIuGIbL0IqXgH8W4fSeG//pfSA+PEO/sYGJoiKl0
      GqmiAqqqMLtc6Mh2ZzpdLgLjK9tUZFnG6/PRdePasiSPQsFJzhx9m8raOmqbWhcdbFkupg1g
      MTKqcDhMLBYnmUzy05dfZee2rQwODePzebFZrYQjEYZHRvEUFDA0MsLmjW10dnezrrmJaCzG
      pavXqKqoYMTvp6u7h9bmJuw2G4qqoGQUAhMTmEwmnE4HHZ1dmE0mkqkUJqOJ8UCAB/btRRTn
      a4Fe2U1oqDKhqjA8lkISBUbGU0xFMtRXmtA0sFkkNKCrP4FRFhFFqCo1MDqepq7SxJA/RTia
      oazYQDiqEIooGGSB0UCaaFwlHM2wvsFCR18cm1li2f1dqdTyBtQTCVAVUgic7Gjn9InjjPv9
      2d34fJa92Wyx0Njcwr4PPEjzuvUcfuPQMi8yC19ZGf6BfsZGVkBBo2nZKbBIhPVbt0/LqK4m
      ptuhb1y6QN8C0znJVIqpqRCDQ0PIsszE5CTJZIqqygr8Y2MkbvmXToeDosJC7HYbfQODVJaV
      0dvfT2d3D96iIhrraxkeGaWstIQz5y+gk3R4CguwmM1MTE4iiiKyLDMVCtFQV8fQ8Ah2u5VS
      n2/eR6Gk+Un6/9eyb0JGuWVBGkQTCiaDSDKlYjZKxJMqxlsNWYqikUprmIwikgiqlmUCz2Q0
      BCHLtHzbFm9To6dSGgaDgCQKqBrE4gpmo4ROt/THeqlnLxumNs8aXskHmsXCxN79PPfcd+cV
      DbwNWZbZtXcfp44fI7ZMahpRFNm2fRtm4+LqlfnCW1LGui3bFpwCXA6mTSpXemomBEFgcGiI
      +rpahoZHaG1upqevj4qyMuw2KxazhfaODmqqqzDIcpaHpb6OK9euTy/e0hIfNquVRDJJMpmk
      takREHA67GiAw25naGSENw8f5SNPPIbVYqaqopyevj5Kfb55r83i8JH0i8zX7rvoTZjhpzus
      2Vsi34oFrGZp1ucMM0KB21+T9TkW86035Rm3VQTs1uXvYnp3CSSNsMS57JCm8fd/8y2m8mhv
      T6VSvHngdXylpVl252XEApVVlZgMc2OmlWB0aAC7y0Vlbf2qxgTTT4D+7k6uXzy/2OfXJHyl
      HoYv/z6Z1MpigbWO5p2/S1WwbEl0hZqm8ZLfz2H/PALZ80CUJKqqq+np7l6SEdQ3NlLq83Iv
      wlZJ0rHrgYfmHYZaDqafJzO1U99rsDm9GC05WNV+zmB110HrOpDzdy0C6TRnA0sPnFVFIZPJ
      8PjTH8mrRUGv17P3gQ+wfceOe7L4IRun9nS0r+oxZxiA7R3Ju94L2J1urK4F+GV+DiAIEjZ3
      HbgLYNt2yCMrohmNvDIZJLbMlGZfTw9VtbV85T/+NvsffAiP14ter58WptPpdDhdLrZs38GX
      f/03eejDjzKZh8zpSjA6OLCqhGzTDqnBYMRitS0oS7oWIUoSNocTV/EmRrpeebcv557B4qhE
      b3Rmo+6GxmzPz+lT8zM1FBSS2riZ9vN/uaLz9nR2svO+vXzo8Sd44OEPMjU1RTgUQtNULBYr
      DqdzWlRwYnwsb0mk5SKdTjE5PrZqfUOzIjJXYeF7zgDchR50ej3u4k0giO+Y0MU7DVfxJkTx
      1s8lCFBTC8U+1M4OUl2daOEQCAKCy42hvgGhsorQVHDFBa3JGZJVssGAp6gIT1Furv57weic
      85oC4/fGALwlZbNkhd4LuH0jLK5azLZSYqH+d/mK7g08Fftm/V8DxkNTdAcnCIsCms0GAoia
      gmtinFpP0aq0ti/lGLHI3CREKpVCEET0+sWzX6qqZhkBVXXBwtdSJXQXwqyrcrgLsNrta5IN
      Ihd0ej2e4mx6VJJkiqoeoOfiP73LV7X6kE0FuH1bpv9/e3Kv49qVOw1kt8I3RVEYHx1hanKC
      2qZWRFFcUZOZcx450ly42zdPZzK8cfgIVRUVRGMx6qqrMZlNZDIZglNTuJ1OEokkA0NDFBYU
      oNfrCUciBKemqCgrRRAEdJJEPJGgwO2ejlHvSQwA2QJGaWU1Ny5dWLUT3Et4S8rQ6+/km8sb
      P/pzaQDF1Q+hN9zJ0k2M+em4fnXBhZ1Opehuv4bL7WbMv/zAtLLmjuRQOp0mnUyCkI0Zpbvp
      U+56WugkiYqyMsKRCLF4nP7BQQoLCugfHKSnt48SXzHJZBKLxYLL6aSwwE1PXx8mo5GLl68y
      HghQXlqCoqq4Z9AdrmbX6Jznkq+sgt6O9nkHF9YKJEmism52UcTqqsFdsp2JoZPv4pWtLgRR
      T3nTx6b/r6oqPR3teeXmk4kEPl/xsg2gtLyCoiIv/d1dDPf3EgmHphefJEk4XG7Kqmoo9BZn
      s0L62cUvRVUJhcNYzGZ0OgmT0ci19nZcTie+4mIcDjuFbjeKojIVCuEr9iLr9ZT4ionGYsiy
      ntIS3yxdX2DWprdSzDEAvSxT09jM1fP5KXy/WyirrsFincuVU9P2eSaGTrFSCaG1Ak/5HuyF
      TdP/T8RjhJYwuFTi8zEyMop/dGkDQ6IksXP3bk4dfoNoDnnUjKoS8I8S8I/i9hSxbvNWzHfV
      C3SSxPYtm2e9Vl1VmfN8vuJsHae1Ofu3btk4/3C8xT73d18ucjZW+MorcRYUrtpJVhtGs5nq
      hqac7xWU7pjlL7+XIQgS9Vu+Muu1VCKJksk/s6OqKh995tklz9tu3rKF0MRYzsV/NybG/Jw+
      8jbGVZwlWAgO5+oR5uY0AFEUaWnbjC4HRd5aQHPb5nkfg6Koo3HHbyNKq9uL8m6gtPFpLK56
      IqEpYrfUcrIKm/kfQxQFfKWlfO7Lv4LLvfjCEQSB+x96mAKXY0nKLLFImIGeLvTyvb3vkiTh
      nicNu6zjfe1rX/tarjdkgwGz1YZ/ZGhVRNlWC3Ut6yhZhDXYaCkinQgS9Ofmvn8vQDZ5sJV9
      livnLtHX1UF/VwcjA/1YbFZCwSCZTH6L0+FyU1pZjd3hYPO27WjAZCAwR4pWr5epbajnF37x
      05gM8rLocZKJxLS2172Cr7xiXrmj5WBBenRN0+jpaKfj6uVVO+FKUFJRSXPb5rxaYjOpCEdf
      +DTR4HurrgGAIGH0PEtGmNveIYgiZoslL9cEYN3mrfjKZ/vdyUSCkeEhAuPjKBkFq91Gsa8E
      p8tFJpPm8Ksv521gd8NgNJHJpO+JnoQoSezc/4FV7VtbVCBD0zS626/fU/HifOAtKaN189Yl
      TQaFxq9z/CefQ8mDO38tweH7IFF117zv62UZnV6/qJSsp9i35EGScf8o544dzvvzd0MQBCrr
      suzPq42axmZqGptXtWdt0a1UEASqG5poaF2/6sMI+aKsqobmpvUk+v1MXexi6mInsZ4RMtFE
      zkqlkkgROHKJ6NEAlZ7PIghrM5bJhYLSnRRUfWrBz6RTKeqa180r/iYIAt6SUlo2bpmTQlwM
      uaq5S4GmaRR6i/GWlq3oOHfD7Smiqr5x1Rs281oZgiBQUVuP2Wrj6vkzc/zHewVB1SjOWJDf
      7qb9uyfR7sp+CDoJS00J7t2tWJsqEPU61IxC/z+9QuRG/+2Lx1P3EH7xFdZ6atRZ1MbGB79B
      V/vi1PRGo5HNu+9jdHCQsZEh4tEogiBgsdkpLiujoKh4WXO0q1Fk0jSNlrbNZNJpAv6V8zW5
      Cj1s2Lr9nswF5701ZnldfOzY/wFuXLqAf3gFs555wBBVsN0IQsTPfCU5LaMQae8n0t6PqbKY
      ko/uRVPVO4sfQNOwTW7A/lANHef++p5e80pgK2hk08PfRDY6sC6iniiKIiaLFb1epqyqmpKK
      ymwfDVk/eSW7pMFgXPZ3b0M2GNDp9bRt20nHtSsLjtouBm9JKc0b58/6rRRL9g2MJjMbtu0k
      MOan6/rVVadSN5ktuCIi2oUuyOS/G8V7R+j+6xco2De3gKKpULv+8+hlO9dPfhNNe+dJWBeC
      XnLi0z7K6PdOIxr0GKq9yDo9qXkCUV95BbLhzlDM7f781YDN6UQQhGU30skGAyZTVtpI0ulo
      WLcBt6eI9iuXluRemcxm6lvX4ykuuaeu95KV4mdC0zQC/lGG+noYHx1ddvpLFEWc7gJKK6sx
      TqYZ/M5rc9ydfCFIIogiWvrOtciFDjRFRYklSFgHCbhfJyOujYY/s64a9+ADCMHZO5xaYidQ
      ayEjzN4ECr3FrNuy7Z7tiJqmcfLtQ8sSpoZsvNa0YWMO3WaFgN/PYG83U5OTpJKJOd+VDQYc
      Ljfe0nKKin1ze43uAVZkALehaRrJeJzJwBiBMT+hYJBYNJJT/hKy7pTJYsFqc+D2eCjweDFZ
      LGTCMTr//AdkwivL2khmI47N9SixJFo6Q+jSXalQp0ps4wUCw8unAF8pBFFHRf0z6M6UkBrM
      vTMaG0vR3d9EJBLKFoA8XjzFxUsObJeK8ZFhzp04uuTv6XR6tu9/IGeLykxk0mkSiTjJRAIl
      k0aSdBhMJgxGU158U6uJVTExQRAwms34zJX4yrP+qKJkSCWSpFLJ6YqiJEnoDQaMRhOSTjfr
      0aZpGmOvnVnx4gdQYglEgx7f0/fR/085psSCIi3r/hujzlfpuvFtMuo7O0xvddWybt/XkMZs
      9A3NP8WW7Bim7In7MDY0voNXBwXeYipr6+ldiliKINC4vi0vgludXo9Vr8e6BubQ78kzJuuT
      yuj1Mhbya1zKTEUJnl29gefJ41fxPLiF+foGRl44RmIggVf3CZQNw0wox0kl7q00lFHy4XV+
      mLKWJ7E4yghcuLBglV1TVBLDAYy+gnt6XXdDEATqWtZl5w66OlkseyaKIg3r2iipyN3otpax
      ZhLkkfZ+1MTqDToo0QTRjkGcWxqyLpB650fUOSwkBrI0IWJGjy20i+ZP/TZdR/+RkYFXSWqr
      R7UuCBJu31aMw9UI7XbUjEjf0ZfRF9gxlS1OXS7o7q27Mx+yi3oDDrebrhvX5q08OwsKqWtu
      xel+Z410tbBmDCDWM7Lqx4x2DlL8xG5KP/EAYwfOkAnHsdaX4XloC91/9QLqLUkeNZlm8P+8
      hTZsp0h7moxtCq05TFToIBxYekVTEPVY5FqsQj3V9/8i4pSRvjdfmWWE6UCITDCSneSaZ4MV
      Dfq8jOReQRAEikvL8RSXEApOEpwIkIzHszGc2YKrsBCLzf6uFUhXA2vGAJLjU6t+zPREGEEQ
      cG1rwrXtTvu0pmmUf+4Rxg+dQzIbiPeOkg7enjMV0AWdyO0VrP+NP2TqZjvDJw4iFGcQPBmS
      sXGS0Qky4WyQL1udGBwFGEweUu1xTMYyijfdz+B3DqHEk4yNXERnN89a/NPXoajoXTbSkzl2
      VwHcu1rRu1av9325kCQJV0EhrjXcIr9crBkDUJOrn5tX07nTsoIgYGssx9ZYTrRriO4Lc4Wk
      U4EQYwfPEnjrImgGtC4T1b/6NEosgf/1MyRHJtBUFclsxLm5AZOniP7Lr5AigX/4NEo8Wy1P
      +idRonNTfrdRsHc98f4xQpe6plO/okGPa3szng9ufc9yNb1XsGYMQDKvHpHq9DGNi+fKtfT8
      9YZY14xWcEVl9OWTxPtGZxlrZirK+KFzGHxuBL0EqoZjYx3piTBKPInB48RSX8bE4Utzji/o
      JKxNFRTsWU90Zwvxfj+irMdSXYyh2I3wHnYt3itYMwZgKHQQbV+YuXip0LsXT7MZSwrR2cxz
      0q+S2YjnwS0MPHcANZlG0OuI9Y6izSPlmRyZpOiR7Ti3NKB3WrE1VRAfCmCtK0WUdcS6h0kM
      zuixF6BgXxuGouywt7WuFGvdOy8S9/93rEohbDUwdaGD/n96dVWPWfXLT2BtKF/83OdvMvSj
      wyiRbNeRZDZQ/PhunNubSPqDxHtGUDMKw8+/teBxbC1VVHz+kZw7txJLMP72RWJdw4gGPY5N
      9Tja6hDm0Tx4H+8M1swTwNpYgWQ1TS/ClULvsmKumZ9SfSbsbXUYSzxEuwZB1TDXlGDwZndm
      o9eF0eti8tTi2aBMJDZvRkcyG/F+aPtS/oT38Q5gzRiAZJRx72pl7LXTq3K8gn1tCHm2zwqC
      gKHIiaFofmFpvSsPhmSHdd7C2/tYm1hTUVbhAxsxePNnIpsPpnIP7p2tq5pBMZV7MBQvMFQu
      ijg2ve/SvNewpgxAMsiUfeohJPPye9L1Tiulzz6IKK/uw02U9fie3INkyXFtgoBrWyO2lqpV
      Pef7uPdYM0HwTES7h+n/x1eW3Bind1qp/NLjGBfaqVcATdOI9/sZO3CWeO8oWkZB57Dg3tWC
      a3vLqhvd+7j3WJMGAJCaDDP602NMXeoCZeHBGEEv4dhYT/ETu9Hl2qFXGZqmocaTaIqKaDIg
      vkv9Ou9j5VizBgDZhZYYHGfi+BWiNwdJBULThSlBJ6F327A2lOPe2ZItHL0fgL6PJWJNG8BM
      qOkMSjyFmsi2GEhmI6JRfn/3fR8rwv8Hr0/6f/MXYEYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ex_4' width='192'>
      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
      ogAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ex_5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ex_6' width='192'>
      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
      zTxkDHnIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ex_7' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
