# -*- coding: utf-8 -*-
"""
Created on Thu Dec 15 17:32:38 2016

Each new term in the Fibonacci sequence is generated by adding 
the previous two terms. By starting with 1 and 2, the first 10 terms 
will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose 
values do not exceed four million, find the sum of the 
even-valued terms.


@author: Munish
"""

def fib():
    a = 1
    b = 2
    while True:            # First iteration:
        yield a            # yield 0 to start with and then
        a, b = b, a + b    # a will now be 1, and b will also be 1, (0 + 1)
        
list_fib = []
sum = 0
max = 50
        
for index, fibonacci_number in enumerate(fib()):
     list_fib.append(fibonacci_number)
     #print(list_fib)

     print('{i:3}: {f:3}'.format(i=index, f=fibonacci_number))
     if index == max or fibonacci_number>4*10**6:
         break

for i in range(len(list_fib)-1):
       if list_fib[i]%2 ==0:
              sum +=list_fib[i]
       else:
              i +=1
print ("Sum of seq is",sum)